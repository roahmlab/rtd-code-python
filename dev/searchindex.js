Search.setIndex({"docnames": ["index", "introduction", "planner/armour", "planner/planner", "planner/rtd", "setup", "simulation/components", "simulation/entities", "simulation/simulation", "simulation/simulations", "simulation/systems", "utils/options", "utils/types", "utils/utils"], "filenames": ["index.rst", "introduction.rst", "planner/armour.rst", "planner/planner.rst", "planner/rtd.rst", "setup.rst", "simulation/components.rst", "simulation/entities.rst", "simulation/simulation.rst", "simulation/simulations.rst", "simulation/systems.rst", "utils/options.rst", "utils/types.rst", "utils/utils.rst"], "titles": ["Rtd-Python Documentation", "Introduction", "Example RTD Planner Implementation of ARMOUR", "Planner Reference", "RTD Planner Interfaces and Base Classes", "Setup Guide", "Components for Entities and Agents", "Entities and Agents", "Simulation Reference", "Simulation Files and World Container", "Simulation Systems", "Options", "Type Hintings", "RTD Code Utilities Reference"], "terms": {"introduct": 0, "setup": [0, 9], "guid": [0, 10], "planner": 0, "refer": [0, 6, 10], "interfac": [0, 3], "base": [0, 1, 3, 8, 10, 11], "class": [0, 3, 6, 8, 9, 10, 11], "exampl": [0, 1, 3, 7], "implement": [0, 1, 3, 6, 7, 9, 10, 11], "armour": [0, 3, 8, 12], "simul": [0, 1, 6, 7], "entiti": [0, 1, 8, 9, 10], "agent": [0, 1, 8, 9], "worldent": [0, 8], "box": [0, 8], "obstacl": [0, 8, 9], "compon": [0, 1, 7, 8, 10], "system": [0, 1, 6, 7, 8], "trimeshcollisionsystem": [0, 8], "pyvistavisualsystem": [0, 8], "file": [0, 1, 8], "world": [0, 7, 8], "contain": [0, 6, 8], "model": [0, 6, 8], "code": [0, 1, 5, 11], "util": [0, 7, 11, 12], "option": [0, 5, 6, 7, 9, 10, 13], "type": [0, 6, 7, 10, 11, 13], "hint": [0, 13], "built": [0, 13], "numpi": [0, 13], "thi": [1, 6, 7, 9, 10, 11], "i": [1, 6, 7, 9, 10], "python": [1, 5], "origin": 1, "matlab": 1, "rtd": [1, 3, 5, 6, 7, 9, 10, 11, 12], "architectur": [1, 7, 10], "It": [1, 6, 7, 9, 11], "one": [1, 6], "few": [1, 7], "specif": [1, 6, 7], "chang": 1, "well": [1, 6, 10], "which": [1, 6, 7, 10, 11], "like": 1, "get": [1, 6, 10], "backport": 1, "version": [1, 9], "futur": 1, "pleas": 1, "note": [1, 10], "mai": [1, 6], "subject": 1, "signific": 1, "In": [1, 9], "here": [1, 12], "split": 1, "up": [1, 7], "mani": 1, "differ": [1, 10], "packag": 1, "somewhat": 1, "flatten": 1, "out": 1, "structur": 1, "smaller": 1, "behavior": [1, 6, 7], "an": [1, 6, 7, 9, 10, 11], "involv": 1, "look": 1, "pertain": 1, "instead": 1, "whole": 1, "addition": 1, "written": 1, "intent": 1, "make": 1, "more": [1, 7, 10], "explicit": 1, "For": [1, 5], "": [1, 6, 10, 11], "updat": [1, 6, 7, 9, 10, 11], "function": [1, 6, 7, 9, 11], "you": [1, 11], "now": 1, "write": [1, 11], "all": [1, 6, 7, 9, 10, 11], "intern": [1, 6, 10], "call": [1, 6, 7, 10], "manual": 1, "can": [1, 6, 7, 9, 10], "multipl": 1, "time": [1, 6, 7, 10], "per": [1, 10], "timestep": 1, "should": [1, 6, 9, 10, 11], "track": [1, 6, 10], "across": 1, "everyth": [1, 9], "1": [1, 6, 7, 10], "easier": 1, "manag": [1, 7], "2": [1, 6, 10, 12], "enabl": [1, 10], "valid": [1, 10], "sure": 1, "part": 1, "ar": [1, 6, 10, 12], "accordingli": 1, "requir": [5, 7, 11], "3": 5, "higher": 5, "best": 5, "result": [5, 7, 10], "us": [5, 6, 7, 10], "11": 5, "clone": 5, "repositori": 5, "open": 5, "termin": 5, "root": 5, "directori": 5, "instal": 5, "virtualenv": 5, "py": 5, "m": [5, 6], "pip": 5, "creat": [5, 6, 7, 10], "new": [5, 6, 10], "virtual": 5, "environ": 5, "venv": 5, "rtd_venv": 5, "activ": 5, "rtd_venvscriptsactiv": 5, "its": [5, 6, 10], "depend": 5, "r": [5, 7], "txt": 5, "insid": [5, 12], "scriptsdemo": 5, "run": [5, 9, 10], "demo": 5, "script": 5, "categor": [6, 7], "data": [6, 7, 10], "have": 6, "purpos": 6, "hold": [6, 9, 11], "intrins": 6, "defin": [6, 7], "dynam": [6, 7, 9, 10], "transform": [6, 10], "either": [6, 7, 10], "anoth": [6, 10], "same": 6, "explicitli": [6, 9], "ani": [6, 7, 9, 10, 11], "point": 6, "loop": [6, 10], "basecontrollercompon": 6, "sourc": [6, 7, 9, 10, 11], "object": [6, 7, 9, 10, 11], "control": [6, 7, 10], "store": [6, 10], "info": [6, 7, 10], "state": [6, 7], "trajectori": 6, "number": [6, 9, 10, 11], "input": [6, 10], "abstract": [6, 7, 9, 10, 11], "getcontrolinput": 6, "method": [6, 7, 10, 11], "need": [6, 9, 10, 11], "reset": [6, 7, 10], "each": [6, 7, 9, 10], "properti": [6, 7, 11], "settrajectori": 6, "set": [6, 7, 10], "basedynamicscompon": 6, "move": [6, 7], "t_move": [6, 7], "float": [6, 7, 9, 10, 12], "baseinfocompon": 6, "immut": 6, "paramet": [6, 7, 9, 10, 11], "ti": 6, "extend": [6, 10], "along": 6, "mixin": [6, 11, 12], "add": [6, 9, 10, 11], "basestatecompon": 6, "refernc": 6, "storag": 6, "commit_state_data": 6, "list": [6, 10, 12], "ndarrai": [6, 12], "shape": 6, "n": 6, "float64": 6, "append": [6, 10], "after": [6, 9], "last": 6, "commit": 6, "from": [6, 7, 9, 10], "vec": [6, 12], "correspond": [6, 7, 10], "get_stat": 6, "dict": [6, 7, 9, 10, 11], "return": [6, 7, 10, 11], "certain": 6, "kei": [6, 7, 10], "wa": 6, "request": 6, "random_init": 6, "initi": [6, 9, 10], "start": [6, 9], "randomli": 6, "genericentityst": [6, 7], "entity_info": 6, "A": [6, 7, 10], "gener": [6, 9, 10], "n_state": [6, 7], "matrix": [6, 10], "keep": 6, "interv": 6, "moment": 6, "retriev": 6, "default": [6, 7, 10, 11], "most": [6, 10], "recent": [6, 10], "take": [6, 7, 10, 11], "current": [6, 10, 11], "static": [6, 7, 10, 11], "defaultopt": [6, 7, 10, 11], "No": 6, "though": 6, "common": 6, "initial_st": 6, "none": [6, 7, 9, 10], "interpol": 6, "valu": 6, "state_rang": 6, "tupl": [6, 7, 10], "save_to_opt": 6, "bool": [6, 7, 9, 10], "fals": [6, 9], "first": 6, "given": [6, 10, 11], "rang": [6, 10], "start_rang": 6, "0": [6, 7, 9, 10], "inclus": 6, "Will": [6, 9], "save": [6, 7, 10], "so": 6, "revert": 6, "when": 6, "min": [6, 12], "max": [6, 9, 12], "whether": [6, 7, 9, 10], "random": 6, "box_obstacl": [6, 7], "boxobstacleinfo": [6, 7], "dimens": [6, 7], "color": [6, 7], "boxobstaclevisu": [6, 7], "box_info": 6, "box_stat": 6, "pyvistavisualobject": [6, 9, 10], "visual": [6, 7, 9, 10], "plot": [6, 10], "create_plot_data": [6, 10], "pyvista": [6, 10], "actor": [6, 10], "plot_data": [6, 10], "plotdata": 6, "boxobstalc": 6, "boxobstaclecollis": [6, 7], "dynamiccollisionobject": [6, 9, 10], "getcollisionobject": [6, 10], "collisionobject": [6, 9, 10], "collis": [6, 7, 9, 10], "boxobstaclezonotop": [6, 7], "get_zonotop": 6, "zonopi": 6, "zonotop": 6, "boxobstacl": [6, 7], "armouragentcollis": [6, 7], "arm_info": 6, "armouragentinfo": [6, 7], "arm_stat": 6, "armouragentst": [6, 7], "q": 6, "configur": [6, 11], "onli": [6, 10], "must": [6, 7], "provid": [6, 7, 11], "Not": 6, "demand": 6, "robot": 6, "urchin": 6, "urdf": 6, "m_min_eigenvalu": 6, "graviti": 6, "transmission_inertia": 6, "buffer_dist": 6, "t_state": 6, "z_state": 6, "commit_move_data": 6, "associ": 6, "vector": 6, "input_tim": 6, "npfvec": 6, "npfmat": 6, "armrobotst": 6, "armourag": [6, 7, 9], "joint_limit_check": 6, "t_check_step": [6, 7], "check": [6, 7, 10], "joint": 6, "limit": 6, "did": 6, "exce": 6, "step": [6, 7, 9], "size": 6, "exceed": 6, "posit": 6, "pos_rang": 6, "vel_rang": 6, "random_posit": 6, "true": [6, 9], "random_veloc": 6, "veloc": 6, "armouragentvisu": [6, 7], "trimesh": [6, 10], "mesh": [6, 10], "convert": 6, "them": [6, 10], "replac": 6, "pose": 6, "armourcontrol": [6, 7], "armouridealagentdynam": [6, 7], "arm_control": 6, "assum": [6, 10], "perfectli": 6, "execut": [6, 9], "controller_input_check": 6, "wasn": 6, "t": [6, 10], "give": 6, "bad": 6, "torqu": 6, "armourmexcontrol": 6, "exist": [7, 9, 10], "varieti": 7, "work": 7, "mix": 7, "ec": [7, 10], "aggreg": 7, "core": 7, "special": 7, "case": 7, "addit": 7, "necessari": [7, 10], "pure": 7, "deriv": 7, "prescrib": 7, "some": [7, 9], "also": [7, 11], "hand": 7, "assist": 7, "composit": 7, "ad": 7, "desir": [7, 10], "demonstr": 7, "follow": 7, "concret": 7, "sim": [7, 9, 10], "allow": 7, "still": 7, "wai": 7, "detail": 7, "comment": 7, "below": 7, "construct_compon": 7, "component_nam": 7, "str": [7, 10], "component_arg": 7, "construct": 7, "self": [7, 10], "component_opt": 7, "5": [7, 9], "name": 7, "e": 7, "g": 7, "argument": [7, 10], "get_componentopt": 7, "instanc": [7, 9], "actual": 7, "inherit": 7, "otherwis": 7, "pull": 7, "get_componentoverrideopt": 7, "under": 7, "emptyinfost": 7, "reset_compon": 7, "everi": [7, 10], "equival": 7, "represent": 7, "3d": 7, "make_box": 7, "center": 7, "dim": 7, "specifi": [7, 9, 10], "x": [7, 10], "y": [7, 10], "z": 7, "coordin": 7, "b": 7, "boxobtacl": 7, "The": [7, 11], "robust": 7, "success": 7, "successfulli": 7, "joint_limit": 7, "control_input": 7, "ultimate_bound": 7, "we": 9, "isol": 9, "just": 9, "what": 9, "singl": [9, 10], "export": 9, "soon": 9, "basesimul": 9, "add_object": 9, "post_step": 9, "pre_step": 9, "befor": [9, 10], "overal": 9, "lifecycl": 9, "iter": 9, "length": [9, 10], "embed": 9, "summari": 9, "armoursimul": 9, "simulate_timestep": 9, "isent": 9, "If": [9, 10], "treat": 9, "handler": 9, "goal": 9, "max_step": 9, "int": [9, 10], "100000000": 9, "pre_step_callback": 9, "callabl": 9, "step_callback": 9, "post_step_callback": 9, "stop_on_go": 9, "maximum": 9, "stop": 9, "onc": 9, "reach": 9, "popul": 9, "tailor": 10, "adapt": 10, "dure": 10, "separ": 10, "These": 10, "expect": 10, "ensur": 10, "retain": 10, "synchron": 10, "while": 10, "flexibl": 10, "whenev": 10, "relev": 10, "parent": 10, "handl": 10, "incollis": 10, "other": 10, "collid": 10, "pair": [10, 12], "quick": 10, "against": 10, "usual": 10, "resolv": 10, "static_object": 10, "dynamic_object": 10, "simulationsystem": 10, "detect": 10, "addobject": 10, "checkcollisionattim": 10, "happen": 10, "occur": 10, "n_pair": 10, "checkcollisionobject": 10, "collision_obj": 10, "doe": 10, "remov": 10, "alreadi": 10, "updatecollis": 10, "t_updat": 10, "durat": 10, "clientvisualobject": 10, "render": 10, "meshdata": 10, "websocket": 10, "plot_obj": 10, "isplotdatavalid": 10, "is_valid": 10, "rotat": 10, "matric": 10, "anim": 10, "move_msg": 10, "movemsg": 10, "clientvisualsystem": 10, "clientsimulationsystem": 10, "t_span": 10, "time_discret": 10, "pause_tim": 10, "divid": 10, "frame": 10, "wait": 10, "second": 10, "next": 10, "lower": 10, "discret": 10, "smoother": 10, "than": 10, "faster": 10, "speed": 10, "bound": [10, 12], "between": 10, "paus": 10, "get_discretization_and_paus": 10, "framer": 10, "30": 10, "mean": 10, "ratio": 10, "connect": 10, "server": 10, "updatevisu": 10, "figur": 10, "axlim": 10, "4": 10, "lim": 10, "redraw": 10, "recreat": 10, "plotter": 10, "validateorcreatefigur": 10, "longer": 10, "_plotter": 10, "waituntilclos": 10, "until": 10, "close": 10, "proceed": 10, "easi": 11, "complex": 11, "introduc": 11, "instanceopt": 11, "sort": 11, "includ": 11, "merg": 11, "getopt": 11, "copi": 11, "mergeopt": 11, "newopt": 11, "1d": 12, "mat": 12, "2d": 12, "alia": 12, "row": 12, "vecnp": 12, "matnp": 12, "boundsnp": 12}, "objects": {"armour": [[7, 0, 1, "", "ArmourAgent"], [9, 0, 1, "", "ArmourSimulation"], [6, 2, 0, "-", "agent"]], "armour.ArmourAgent": [[7, 1, 1, "", "defaultoptions"], [7, 1, 1, "", "reset"], [7, 1, 1, "", "update"]], "armour.ArmourSimulation": [[9, 1, 1, "", "add_object"], [9, 1, 1, "", "initialize"], [9, 1, 1, "", "post_step"], [9, 1, 1, "", "pre_step"], [9, 1, 1, "", "run"], [9, 1, 1, "", "setup"], [9, 1, 1, "", "step"], [9, 1, 1, "", "summary"]], "armour.agent": [[6, 0, 1, "", "ArmourAgentCollision"], [6, 0, 1, "", "ArmourAgentInfo"], [6, 0, 1, "", "ArmourAgentState"], [6, 0, 1, "", "ArmourAgentVisual"], [6, 0, 1, "", "ArmourController"], [6, 0, 1, "", "ArmourIdealAgentDynamics"], [6, 0, 1, "", "ArmourMexController"]], "armour.agent.ArmourAgentCollision": [[6, 1, 1, "", "getCollisionObject"], [6, 1, 1, "", "reset"]], "armour.agent.ArmourAgentInfo": [[6, 1, 1, "", "defaultoptions"], [6, 1, 1, "", "reset"]], "armour.agent.ArmourAgentState": [[6, 1, 1, "", "commit_state_data"], [6, 1, 1, "", "defaultoptions"], [6, 1, 1, "", "get_state"], [6, 1, 1, "", "joint_limit_check"], [6, 3, 1, "", "position"], [6, 1, 1, "", "random_init"], [6, 1, 1, "", "reset"], [6, 3, 1, "", "velocity"]], "armour.agent.ArmourAgentVisual": [[6, 1, 1, "", "create_plot_data"], [6, 1, 1, "", "defaultoptions"], [6, 1, 1, "", "plot"], [6, 1, 1, "", "reset"]], "armour.agent.ArmourController": [[6, 1, 1, "", "defaultoptions"], [6, 1, 1, "", "getControlInputs"], [6, 1, 1, "", "reset"], [6, 1, 1, "", "setTrajectory"]], "armour.agent.ArmourIdealAgentDynamics": [[6, 1, 1, "", "controller_input_check"], [6, 1, 1, "", "defaultoptions"], [6, 1, 1, "", "move"], [6, 1, 1, "", "reset"]], "rtd.entity.box_obstacle": [[7, 0, 1, "", "BoxObstacle"], [6, 0, 1, "", "BoxObstacleCollision"], [6, 0, 1, "", "BoxObstacleInfo"], [6, 0, 1, "", "BoxObstacleVisual"], [6, 0, 1, "", "BoxObstacleZonotope"]], "rtd.entity.box_obstacle.BoxObstacle": [[7, 1, 1, "", "defaultoptions"], [7, 1, 1, "", "make_box"], [7, 1, 1, "", "reset"]], "rtd.entity.box_obstacle.BoxObstacleCollision": [[6, 1, 1, "", "getCollisionObject"], [6, 1, 1, "", "reset"]], "rtd.entity.box_obstacle.BoxObstacleInfo": [[6, 1, 1, "", "defaultoptions"], [6, 1, 1, "", "reset"]], "rtd.entity.box_obstacle.BoxObstacleVisual": [[6, 1, 1, "", "create_plot_data"], [6, 1, 1, "", "defaultoptions"], [6, 1, 1, "", "plot"], [6, 1, 1, "", "reset"]], "rtd.entity.box_obstacle.BoxObstacleZonotope": [[6, 1, 1, "", "get_zonotope"], [6, 1, 1, "", "reset"]], "rtd.entity": [[6, 2, 0, "-", "components"]], "rtd.entity.components": [[6, 0, 1, "", "BaseControllerComponent"], [6, 0, 1, "", "BaseDynamicsComponent"], [6, 0, 1, "", "BaseInfoComponent"], [6, 0, 1, "", "BaseStateComponent"], [6, 0, 1, "", "GenericEntityState"]], "rtd.entity.components.BaseControllerComponent": [[6, 1, 1, "", "getControlInputs"], [6, 1, 1, "", "reset"], [6, 1, 1, "", "setTrajectory"]], "rtd.entity.components.BaseDynamicsComponent": [[6, 1, 1, "", "move"], [6, 1, 1, "", "reset"]], "rtd.entity.components.BaseInfoComponent": [[6, 1, 1, "", "reset"]], "rtd.entity.components.BaseStateComponent": [[6, 1, 1, "", "commit_state_data"], [6, 1, 1, "", "get_state"], [6, 1, 1, "", "random_init"], [6, 1, 1, "", "reset"]], "rtd.entity.components.GenericEntityState": [[6, 1, 1, "", "commit_state_data"], [6, 1, 1, "", "defaultoptions"], [6, 1, 1, "", "get_state"], [6, 1, 1, "", "random_init"], [6, 1, 1, "", "reset"]], "rtd.sim": [[9, 0, 1, "", "BaseSimulation"]], "rtd.sim.BaseSimulation": [[9, 1, 1, "", "add_object"], [9, 1, 1, "", "initialize"], [9, 1, 1, "", "post_step"], [9, 1, 1, "", "pre_step"], [9, 1, 1, "", "run"], [9, 1, 1, "", "setup"], [9, 1, 1, "", "step"], [9, 1, 1, "", "summary"]], "rtd.sim.systems": [[10, 2, 0, "-", "collision"], [10, 2, 0, "-", "visual"]], "rtd.sim.systems.collision": [[10, 0, 1, "", "CollisionObject"], [10, 0, 1, "", "DynamicCollisionObject"], [10, 0, 1, "", "TrimeshCollisionSystem"]], "rtd.sim.systems.collision.CollisionObject": [[10, 1, 1, "", "inCollision"]], "rtd.sim.systems.collision.DynamicCollisionObject": [[10, 1, 1, "", "getCollisionObject"]], "rtd.sim.systems.collision.TrimeshCollisionSystem": [[10, 1, 1, "", "addObjects"], [10, 1, 1, "", "checkCollisionAtTime"], [10, 1, 1, "", "checkCollisionObject"], [10, 1, 1, "", "defaultoptions"], [10, 1, 1, "", "remove"], [10, 1, 1, "", "reset"], [10, 1, 1, "", "updateCollision"]], "rtd.sim.systems.visual": [[10, 0, 1, "", "ClientVisualObject"], [10, 0, 1, "", "ClientVisualSystem"], [10, 0, 1, "", "PyvistaVisualObject"], [10, 0, 1, "", "PyvistaVisualSystem"]], "rtd.sim.systems.visual.ClientVisualObject": [[10, 1, 1, "", "create_plot_data"], [10, 1, 1, "", "isPlotDataValid"], [10, 1, 1, "", "plot"]], "rtd.sim.systems.visual.ClientVisualSystem": [[10, 1, 1, "", "addObjects"], [10, 1, 1, "", "animate"], [10, 1, 1, "", "defaultoptions"], [10, 1, 1, "", "get_discretization_and_pause"], [10, 1, 1, "", "remove"], [10, 1, 1, "", "reset"], [10, 1, 1, "", "updateVisual"]], "rtd.sim.systems.visual.PyvistaVisualObject": [[10, 1, 1, "", "create_plot_data"], [10, 1, 1, "", "isPlotDataValid"], [10, 1, 1, "", "plot"]], "rtd.sim.systems.visual.PyvistaVisualSystem": [[10, 1, 1, "", "addObjects"], [10, 1, 1, "", "animate"], [10, 1, 1, "", "defaultoptions"], [10, 1, 1, "", "get_discretization_and_pause"], [10, 1, 1, "", "redraw"], [10, 1, 1, "", "remove"], [10, 1, 1, "", "reset"], [10, 1, 1, "", "updateVisual"], [10, 1, 1, "", "validateOrCreateFigure"], [10, 1, 1, "", "waituntilclose"]], "rtd.sim.world": [[7, 0, 1, "", "WorldEntity"]], "rtd.sim.world.WorldEntity": [[7, 1, 1, "", "construct_components"], [7, 1, 1, "", "get_componentOptions"], [7, 1, 1, "", "get_componentOverrideOptions"], [7, 1, 1, "", "reset_components"]], "rtd.util.mixins.Options": [[11, 0, 1, "", "Options"]], "rtd.util.mixins.Options.Options": [[11, 1, 1, "", "defaultoptions"], [11, 1, 1, "", "getoptions"], [11, 1, 1, "", "mergeoptions"]], "rtd.util.mixins.Typings": [[12, 4, 1, "", "Bound"], [12, 4, 1, "", "Bounds"], [12, 4, 1, "", "Boundsnp"], [12, 4, 1, "", "Mat"], [12, 4, 1, "", "Matnp"], [12, 4, 1, "", "Vec"], [12, 4, 1, "", "Vecnp"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:property", "4": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "property", "Python property"], "4": ["py", "data", "Python data"]}, "titleterms": {"rtd": [0, 2, 4, 13], "python": 0, "document": 0, "content": [0, 3, 8, 13], "introduct": 1, "exampl": 2, "planner": [2, 3, 4], "implement": 2, "armour": [2, 6, 7, 9], "refer": [3, 8, 13], "interfac": 4, "base": [4, 6, 7, 9], "class": [4, 7], "setup": 5, "guid": 5, "compon": 6, "entiti": [6, 7], "agent": [6, 7], "box": [6, 7], "obstacl": [6, 7], "worldent": 7, "simul": [8, 9, 10], "file": 9, "world": 9, "contain": 9, "model": 9, "system": 10, "trimeshcollisionsystem": 10, "pyvistavisualsystem": 10, "option": 11, "type": 12, "hint": 12, "built": 12, "numpi": 12, "code": 13, "util": 13}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Rtd-Python Documentation": [[0, "rtd-python-documentation"]], "Contents:": [[0, null], [3, null], [8, null], [13, null]], "Introduction": [[1, "introduction"]], "Example RTD Planner Implementation of ARMOUR": [[2, "example-rtd-planner-implementation-of-armour"]], "Planner Reference": [[3, "planner-reference"]], "RTD Planner Interfaces and Base Classes": [[4, "rtd-planner-interfaces-and-base-classes"]], "Setup Guide": [[5, "setup-guide"]], "Components for Entities and Agents": [[6, "components-for-entities-and-agents"]], "Base Components": [[6, "module-rtd.entity.components"]], "Box Obstacle Components": [[6, "box-obstacle-components"]], "Armour Components": [[6, "module-armour.agent"]], "Entities and Agents": [[7, "entities-and-agents"]], "Base Entity Class (WorldEntity)": [[7, "base-entity-class-worldentity"]], "Box Obstacle Entity": [[7, "box-obstacle-entity"]], "Armour Agent": [[7, "armour-agent"]], "Simulation Reference": [[8, "simulation-reference"]], "Simulation Files and World Container": [[9, "simulation-files-and-world-container"]], "World Model Container": [[9, "world-model-container"]], "Base Simulation": [[9, "base-simulation"]], "Armour Simulation": [[9, "armour-simulation"]], "Simulation Systems": [[10, "simulation-systems"]], "TrimeshCollisionSystem": [[10, "module-rtd.sim.systems.collision"]], "PyvistaVisualSystem": [[10, "module-rtd.sim.systems.visual"]], "Options": [[11, "options"]], "Type Hintings": [[12, "type-hintings"]], "Built-in Types": [[12, "built-in-types"]], "Numpy Types": [[12, "numpy-types"]], "RTD Code Utilities Reference": [[13, "rtd-code-utilities-reference"]]}, "indexentries": {"armouragentcollision (class in armour.agent)": [[6, "armour.agent.ArmourAgentCollision"]], "armouragentinfo (class in armour.agent)": [[6, "armour.agent.ArmourAgentInfo"]], "armouragentstate (class in armour.agent)": [[6, "armour.agent.ArmourAgentState"]], "armouragentvisual (class in armour.agent)": [[6, "armour.agent.ArmourAgentVisual"]], "armourcontroller (class in armour.agent)": [[6, "armour.agent.ArmourController"]], "armouridealagentdynamics (class in armour.agent)": [[6, "armour.agent.ArmourIdealAgentDynamics"]], "armourmexcontroller (class in armour.agent)": [[6, "armour.agent.ArmourMexController"]], "basecontrollercomponent (class in rtd.entity.components)": [[6, "rtd.entity.components.BaseControllerComponent"]], "basedynamicscomponent (class in rtd.entity.components)": [[6, "rtd.entity.components.BaseDynamicsComponent"]], "baseinfocomponent (class in rtd.entity.components)": [[6, "rtd.entity.components.BaseInfoComponent"]], "basestatecomponent (class in rtd.entity.components)": [[6, "rtd.entity.components.BaseStateComponent"]], "boxobstaclecollision (class in rtd.entity.box_obstacle)": [[6, "rtd.entity.box_obstacle.BoxObstacleCollision"]], "boxobstacleinfo (class in rtd.entity.box_obstacle)": [[6, "rtd.entity.box_obstacle.BoxObstacleInfo"]], "boxobstaclevisual (class in rtd.entity.box_obstacle)": [[6, "rtd.entity.box_obstacle.BoxObstacleVisual"]], "boxobstaclezonotope (class in rtd.entity.box_obstacle)": [[6, "rtd.entity.box_obstacle.BoxObstacleZonotope"]], "genericentitystate (class in rtd.entity.components)": [[6, "rtd.entity.components.GenericEntityState"]], "armour.agent": [[6, "module-armour.agent"]], "commit_state_data() (armour.agent.armouragentstate method)": [[6, "armour.agent.ArmourAgentState.commit_state_data"]], "commit_state_data() (rtd.entity.components.basestatecomponent method)": [[6, "rtd.entity.components.BaseStateComponent.commit_state_data"]], "commit_state_data() (rtd.entity.components.genericentitystate method)": [[6, "rtd.entity.components.GenericEntityState.commit_state_data"]], "controller_input_check() (armour.agent.armouridealagentdynamics method)": [[6, "armour.agent.ArmourIdealAgentDynamics.controller_input_check"]], "create_plot_data() (armour.agent.armouragentvisual method)": [[6, "armour.agent.ArmourAgentVisual.create_plot_data"]], "create_plot_data() (rtd.entity.box_obstacle.boxobstaclevisual method)": [[6, "rtd.entity.box_obstacle.BoxObstacleVisual.create_plot_data"]], "defaultoptions() (armour.agent.armouragentinfo static method)": [[6, "armour.agent.ArmourAgentInfo.defaultoptions"]], "defaultoptions() (armour.agent.armouragentstate static method)": [[6, "armour.agent.ArmourAgentState.defaultoptions"]], "defaultoptions() (armour.agent.armouragentvisual static method)": [[6, "armour.agent.ArmourAgentVisual.defaultoptions"]], "defaultoptions() (armour.agent.armourcontroller static method)": [[6, "armour.agent.ArmourController.defaultoptions"]], "defaultoptions() (armour.agent.armouridealagentdynamics static method)": [[6, "armour.agent.ArmourIdealAgentDynamics.defaultoptions"]], "defaultoptions() (rtd.entity.box_obstacle.boxobstacleinfo static method)": [[6, "rtd.entity.box_obstacle.BoxObstacleInfo.defaultoptions"]], "defaultoptions() (rtd.entity.box_obstacle.boxobstaclevisual static method)": [[6, "rtd.entity.box_obstacle.BoxObstacleVisual.defaultoptions"]], "defaultoptions() (rtd.entity.components.genericentitystate static method)": [[6, "rtd.entity.components.GenericEntityState.defaultoptions"]], "getcollisionobject() (armour.agent.armouragentcollision method)": [[6, "armour.agent.ArmourAgentCollision.getCollisionObject"]], "getcollisionobject() (rtd.entity.box_obstacle.boxobstaclecollision method)": [[6, "rtd.entity.box_obstacle.BoxObstacleCollision.getCollisionObject"]], "getcontrolinputs() (armour.agent.armourcontroller method)": [[6, "armour.agent.ArmourController.getControlInputs"]], "getcontrolinputs() (rtd.entity.components.basecontrollercomponent method)": [[6, "rtd.entity.components.BaseControllerComponent.getControlInputs"]], "get_state() (armour.agent.armouragentstate method)": [[6, "armour.agent.ArmourAgentState.get_state"]], "get_state() (rtd.entity.components.basestatecomponent method)": [[6, "rtd.entity.components.BaseStateComponent.get_state"]], "get_state() (rtd.entity.components.genericentitystate method)": [[6, "rtd.entity.components.GenericEntityState.get_state"]], "get_zonotope() (rtd.entity.box_obstacle.boxobstaclezonotope method)": [[6, "rtd.entity.box_obstacle.BoxObstacleZonotope.get_zonotope"]], "joint_limit_check() (armour.agent.armouragentstate method)": [[6, "armour.agent.ArmourAgentState.joint_limit_check"]], "module": [[6, "module-armour.agent"], [6, "module-rtd.entity.components"], [10, "module-rtd.sim.systems.collision"], [10, "module-rtd.sim.systems.visual"]], "move() (armour.agent.armouridealagentdynamics method)": [[6, "armour.agent.ArmourIdealAgentDynamics.move"]], "move() (rtd.entity.components.basedynamicscomponent method)": [[6, "rtd.entity.components.BaseDynamicsComponent.move"]], "plot() (armour.agent.armouragentvisual method)": [[6, "armour.agent.ArmourAgentVisual.plot"]], "plot() (rtd.entity.box_obstacle.boxobstaclevisual method)": [[6, "rtd.entity.box_obstacle.BoxObstacleVisual.plot"]], "position (armour.agent.armouragentstate property)": [[6, "armour.agent.ArmourAgentState.position"]], "random_init() (armour.agent.armouragentstate method)": [[6, "armour.agent.ArmourAgentState.random_init"]], "random_init() (rtd.entity.components.basestatecomponent method)": [[6, "rtd.entity.components.BaseStateComponent.random_init"]], "random_init() (rtd.entity.components.genericentitystate method)": [[6, "rtd.entity.components.GenericEntityState.random_init"]], "reset() (armour.agent.armouragentcollision method)": [[6, "armour.agent.ArmourAgentCollision.reset"]], "reset() (armour.agent.armouragentinfo method)": [[6, "armour.agent.ArmourAgentInfo.reset"]], "reset() (armour.agent.armouragentstate method)": [[6, "armour.agent.ArmourAgentState.reset"]], "reset() (armour.agent.armouragentvisual method)": [[6, "armour.agent.ArmourAgentVisual.reset"]], "reset() (armour.agent.armourcontroller method)": [[6, "armour.agent.ArmourController.reset"]], "reset() (armour.agent.armouridealagentdynamics method)": [[6, "armour.agent.ArmourIdealAgentDynamics.reset"]], "reset() (rtd.entity.box_obstacle.boxobstaclecollision method)": [[6, "rtd.entity.box_obstacle.BoxObstacleCollision.reset"]], "reset() (rtd.entity.box_obstacle.boxobstacleinfo method)": [[6, "rtd.entity.box_obstacle.BoxObstacleInfo.reset"]], "reset() (rtd.entity.box_obstacle.boxobstaclevisual method)": [[6, "rtd.entity.box_obstacle.BoxObstacleVisual.reset"]], "reset() (rtd.entity.box_obstacle.boxobstaclezonotope method)": [[6, "rtd.entity.box_obstacle.BoxObstacleZonotope.reset"]], "reset() (rtd.entity.components.basecontrollercomponent method)": [[6, "rtd.entity.components.BaseControllerComponent.reset"]], "reset() (rtd.entity.components.basedynamicscomponent method)": [[6, "rtd.entity.components.BaseDynamicsComponent.reset"]], "reset() (rtd.entity.components.baseinfocomponent method)": [[6, "rtd.entity.components.BaseInfoComponent.reset"]], "reset() (rtd.entity.components.basestatecomponent method)": [[6, "rtd.entity.components.BaseStateComponent.reset"]], "reset() (rtd.entity.components.genericentitystate method)": [[6, "rtd.entity.components.GenericEntityState.reset"]], "rtd.entity.components": [[6, "module-rtd.entity.components"]], "settrajectory() (armour.agent.armourcontroller method)": [[6, "armour.agent.ArmourController.setTrajectory"]], "settrajectory() (rtd.entity.components.basecontrollercomponent method)": [[6, "rtd.entity.components.BaseControllerComponent.setTrajectory"]], "velocity (armour.agent.armouragentstate property)": [[6, "armour.agent.ArmourAgentState.velocity"]], "armouragent (class in armour)": [[7, "armour.ArmourAgent"]], "boxobstacle (class in rtd.entity.box_obstacle)": [[7, "rtd.entity.box_obstacle.BoxObstacle"]], "worldentity (class in rtd.sim.world)": [[7, "rtd.sim.world.WorldEntity"]], "construct_components() (rtd.sim.world.worldentity method)": [[7, "rtd.sim.world.WorldEntity.construct_components"]], "defaultoptions() (armour.armouragent static method)": [[7, "armour.ArmourAgent.defaultoptions"]], "defaultoptions() (rtd.entity.box_obstacle.boxobstacle static method)": [[7, "rtd.entity.box_obstacle.BoxObstacle.defaultoptions"]], "get_componentoptions() (rtd.sim.world.worldentity static method)": [[7, "rtd.sim.world.WorldEntity.get_componentOptions"]], "get_componentoverrideoptions() (rtd.sim.world.worldentity static method)": [[7, "rtd.sim.world.WorldEntity.get_componentOverrideOptions"]], "make_box() (rtd.entity.box_obstacle.boxobstacle static method)": [[7, "rtd.entity.box_obstacle.BoxObstacle.make_box"]], "reset() (armour.armouragent method)": [[7, "armour.ArmourAgent.reset"]], "reset() (rtd.entity.box_obstacle.boxobstacle method)": [[7, "rtd.entity.box_obstacle.BoxObstacle.reset"]], "reset_components() (rtd.sim.world.worldentity method)": [[7, "rtd.sim.world.WorldEntity.reset_components"]], "update() (armour.armouragent method)": [[7, "armour.ArmourAgent.update"]], "armoursimulation (class in armour)": [[9, "armour.ArmourSimulation"]], "basesimulation (class in rtd.sim)": [[9, "rtd.sim.BaseSimulation"]], "add_object() (armour.armoursimulation method)": [[9, "armour.ArmourSimulation.add_object"]], "add_object() (rtd.sim.basesimulation method)": [[9, "rtd.sim.BaseSimulation.add_object"]], "initialize() (armour.armoursimulation method)": [[9, "armour.ArmourSimulation.initialize"]], "initialize() (rtd.sim.basesimulation method)": [[9, "rtd.sim.BaseSimulation.initialize"]], "post_step() (armour.armoursimulation method)": [[9, "armour.ArmourSimulation.post_step"]], "post_step() (rtd.sim.basesimulation method)": [[9, "rtd.sim.BaseSimulation.post_step"]], "pre_step() (armour.armoursimulation method)": [[9, "armour.ArmourSimulation.pre_step"]], "pre_step() (rtd.sim.basesimulation method)": [[9, "rtd.sim.BaseSimulation.pre_step"]], "run() (armour.armoursimulation method)": [[9, "armour.ArmourSimulation.run"]], "run() (rtd.sim.basesimulation method)": [[9, "rtd.sim.BaseSimulation.run"]], "setup() (armour.armoursimulation method)": [[9, "armour.ArmourSimulation.setup"]], "setup() (rtd.sim.basesimulation method)": [[9, "rtd.sim.BaseSimulation.setup"]], "step() (armour.armoursimulation method)": [[9, "armour.ArmourSimulation.step"]], "step() (rtd.sim.basesimulation method)": [[9, "rtd.sim.BaseSimulation.step"]], "summary() (armour.armoursimulation method)": [[9, "armour.ArmourSimulation.summary"]], "summary() (rtd.sim.basesimulation method)": [[9, "rtd.sim.BaseSimulation.summary"]], "clientvisualobject (class in rtd.sim.systems.visual)": [[10, "rtd.sim.systems.visual.ClientVisualObject"]], "clientvisualsystem (class in rtd.sim.systems.visual)": [[10, "rtd.sim.systems.visual.ClientVisualSystem"]], "collisionobject (class in rtd.sim.systems.collision)": [[10, "rtd.sim.systems.collision.CollisionObject"]], "dynamiccollisionobject (class in rtd.sim.systems.collision)": [[10, "rtd.sim.systems.collision.DynamicCollisionObject"]], "pyvistavisualobject (class in rtd.sim.systems.visual)": [[10, "rtd.sim.systems.visual.PyvistaVisualObject"]], "pyvistavisualsystem (class in rtd.sim.systems.visual)": [[10, "rtd.sim.systems.visual.PyvistaVisualSystem"]], "trimeshcollisionsystem (class in rtd.sim.systems.collision)": [[10, "rtd.sim.systems.collision.TrimeshCollisionSystem"]], "addobjects() (rtd.sim.systems.collision.trimeshcollisionsystem method)": [[10, "rtd.sim.systems.collision.TrimeshCollisionSystem.addObjects"]], "addobjects() (rtd.sim.systems.visual.clientvisualsystem method)": [[10, "rtd.sim.systems.visual.ClientVisualSystem.addObjects"]], "addobjects() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[10, "rtd.sim.systems.visual.PyvistaVisualSystem.addObjects"]], "animate() (rtd.sim.systems.visual.clientvisualsystem method)": [[10, "rtd.sim.systems.visual.ClientVisualSystem.animate"]], "animate() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[10, "rtd.sim.systems.visual.PyvistaVisualSystem.animate"]], "checkcollisionattime() (rtd.sim.systems.collision.trimeshcollisionsystem method)": [[10, "rtd.sim.systems.collision.TrimeshCollisionSystem.checkCollisionAtTime"]], "checkcollisionobject() (rtd.sim.systems.collision.trimeshcollisionsystem method)": [[10, "rtd.sim.systems.collision.TrimeshCollisionSystem.checkCollisionObject"]], "create_plot_data() (rtd.sim.systems.visual.clientvisualobject method)": [[10, "rtd.sim.systems.visual.ClientVisualObject.create_plot_data"]], "create_plot_data() (rtd.sim.systems.visual.pyvistavisualobject method)": [[10, "rtd.sim.systems.visual.PyvistaVisualObject.create_plot_data"]], "defaultoptions() (rtd.sim.systems.collision.trimeshcollisionsystem static method)": [[10, "rtd.sim.systems.collision.TrimeshCollisionSystem.defaultoptions"]], "defaultoptions() (rtd.sim.systems.visual.clientvisualsystem static method)": [[10, "rtd.sim.systems.visual.ClientVisualSystem.defaultoptions"]], "defaultoptions() (rtd.sim.systems.visual.pyvistavisualsystem static method)": [[10, "rtd.sim.systems.visual.PyvistaVisualSystem.defaultoptions"]], "getcollisionobject() (rtd.sim.systems.collision.dynamiccollisionobject method)": [[10, "rtd.sim.systems.collision.DynamicCollisionObject.getCollisionObject"]], "get_discretization_and_pause() (rtd.sim.systems.visual.clientvisualsystem static method)": [[10, "rtd.sim.systems.visual.ClientVisualSystem.get_discretization_and_pause"]], "get_discretization_and_pause() (rtd.sim.systems.visual.pyvistavisualsystem static method)": [[10, "rtd.sim.systems.visual.PyvistaVisualSystem.get_discretization_and_pause"]], "incollision() (rtd.sim.systems.collision.collisionobject method)": [[10, "rtd.sim.systems.collision.CollisionObject.inCollision"]], "isplotdatavalid() (rtd.sim.systems.visual.clientvisualobject method)": [[10, "rtd.sim.systems.visual.ClientVisualObject.isPlotDataValid"]], "isplotdatavalid() (rtd.sim.systems.visual.pyvistavisualobject method)": [[10, "rtd.sim.systems.visual.PyvistaVisualObject.isPlotDataValid"]], "plot() (rtd.sim.systems.visual.clientvisualobject method)": [[10, "rtd.sim.systems.visual.ClientVisualObject.plot"]], "plot() (rtd.sim.systems.visual.pyvistavisualobject method)": [[10, "rtd.sim.systems.visual.PyvistaVisualObject.plot"]], "redraw() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[10, "rtd.sim.systems.visual.PyvistaVisualSystem.redraw"]], "remove() (rtd.sim.systems.collision.trimeshcollisionsystem method)": [[10, "rtd.sim.systems.collision.TrimeshCollisionSystem.remove"]], "remove() (rtd.sim.systems.visual.clientvisualsystem method)": [[10, "rtd.sim.systems.visual.ClientVisualSystem.remove"]], "remove() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[10, "rtd.sim.systems.visual.PyvistaVisualSystem.remove"]], "reset() (rtd.sim.systems.collision.trimeshcollisionsystem method)": [[10, "rtd.sim.systems.collision.TrimeshCollisionSystem.reset"]], "reset() (rtd.sim.systems.visual.clientvisualsystem method)": [[10, "rtd.sim.systems.visual.ClientVisualSystem.reset"]], "reset() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[10, "rtd.sim.systems.visual.PyvistaVisualSystem.reset"]], "rtd.sim.systems.collision": [[10, "module-rtd.sim.systems.collision"]], "rtd.sim.systems.visual": [[10, "module-rtd.sim.systems.visual"]], "updatecollision() (rtd.sim.systems.collision.trimeshcollisionsystem method)": [[10, "rtd.sim.systems.collision.TrimeshCollisionSystem.updateCollision"]], "updatevisual() (rtd.sim.systems.visual.clientvisualsystem method)": [[10, "rtd.sim.systems.visual.ClientVisualSystem.updateVisual"]], "updatevisual() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[10, "rtd.sim.systems.visual.PyvistaVisualSystem.updateVisual"]], "validateorcreatefigure() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[10, "rtd.sim.systems.visual.PyvistaVisualSystem.validateOrCreateFigure"]], "waituntilclose() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[10, "rtd.sim.systems.visual.PyvistaVisualSystem.waituntilclose"]], "options (class in rtd.util.mixins.options)": [[11, "rtd.util.mixins.Options.Options"]], "defaultoptions() (rtd.util.mixins.options.options static method)": [[11, "rtd.util.mixins.Options.Options.defaultoptions"]], "getoptions() (rtd.util.mixins.options.options method)": [[11, "rtd.util.mixins.Options.Options.getoptions"]], "mergeoptions() (rtd.util.mixins.options.options method)": [[11, "rtd.util.mixins.Options.Options.mergeoptions"]], "bound (in module rtd.util.mixins.typings)": [[12, "rtd.util.mixins.Typings.Bound"]], "bounds (in module rtd.util.mixins.typings)": [[12, "rtd.util.mixins.Typings.Bounds"]], "boundsnp (in module rtd.util.mixins.typings)": [[12, "rtd.util.mixins.Typings.Boundsnp"]], "mat (in module rtd.util.mixins.typings)": [[12, "rtd.util.mixins.Typings.Mat"]], "matnp (in module rtd.util.mixins.typings)": [[12, "rtd.util.mixins.Typings.Matnp"]], "vec (in module rtd.util.mixins.typings)": [[12, "rtd.util.mixins.Typings.Vec"]], "vecnp (in module rtd.util.mixins.typings)": [[12, "rtd.util.mixins.Typings.Vecnp"]]}})