Search.setIndex({"docnames": ["index", "introduction", "planner/armour", "planner/generated/armour.reachsets.FOGenerator", "planner/generated/armour.reachsets.FOInstance", "planner/generated/armour.reachsets.IRSGenerator", "planner/generated/armour.reachsets.IRSInstance", "planner/generated/armour.reachsets.JLSGenerator", "planner/generated/armour.reachsets.JLSInstance", "planner/generated/armour.reachsets.JRSGenerator", "planner/generated/armour.reachsets.JRSInstance", "planner/generated/armour.trajectory.ArmTrajectoryFactory", "planner/generated/armour.trajectory.BernsteinArmTrajectory", "planner/generated/armour.trajectory.PiecewiseArmTrajectory", "planner/generated/armour.trajectory.ZeroHoldArmTrajectory", "planner/generated/rtd.planner.reachsets.ReachSetGenerator", "planner/generated/rtd.planner.reachsets.ReachSetInstance", "planner/generated/rtd.planner.trajectory.BadTrajectoryException", "planner/generated/rtd.planner.trajectory.InvalidTrajectory", "planner/generated/rtd.planner.trajectory.Trajectory", "planner/generated/rtd.planner.trajectory.TrajectoryContainer", "planner/generated/rtd.planner.trajectory.TrajectoryFactory", "planner/generated/rtd.planner.trajopt.GenericArmObjective", "planner/generated/rtd.planner.trajopt.Objective", "planner/generated/rtd.planner.trajopt.OptimizationEngine", "planner/generated/rtd.planner.trajopt.RtdTrajOpt", "planner/generated/rtd.planner.trajopt.ScipyOptimizationEngine", "planner/generated/rtd.planner.trajopt.TrajOptProps", "planner/planner", "planner/rtd", "setup", "simulation/components", "simulation/entities", "simulation/simulation", "simulation/simulations", "simulation/systems", "utils/options", "utils/types", "utils/utils"], "filenames": ["index.rst", "introduction.rst", "planner/armour.rst", "planner/generated/armour.reachsets.FOGenerator.rst", "planner/generated/armour.reachsets.FOInstance.rst", "planner/generated/armour.reachsets.IRSGenerator.rst", "planner/generated/armour.reachsets.IRSInstance.rst", "planner/generated/armour.reachsets.JLSGenerator.rst", "planner/generated/armour.reachsets.JLSInstance.rst", "planner/generated/armour.reachsets.JRSGenerator.rst", "planner/generated/armour.reachsets.JRSInstance.rst", "planner/generated/armour.trajectory.ArmTrajectoryFactory.rst", "planner/generated/armour.trajectory.BernsteinArmTrajectory.rst", "planner/generated/armour.trajectory.PiecewiseArmTrajectory.rst", "planner/generated/armour.trajectory.ZeroHoldArmTrajectory.rst", "planner/generated/rtd.planner.reachsets.ReachSetGenerator.rst", "planner/generated/rtd.planner.reachsets.ReachSetInstance.rst", "planner/generated/rtd.planner.trajectory.BadTrajectoryException.rst", "planner/generated/rtd.planner.trajectory.InvalidTrajectory.rst", "planner/generated/rtd.planner.trajectory.Trajectory.rst", "planner/generated/rtd.planner.trajectory.TrajectoryContainer.rst", "planner/generated/rtd.planner.trajectory.TrajectoryFactory.rst", "planner/generated/rtd.planner.trajopt.GenericArmObjective.rst", "planner/generated/rtd.planner.trajopt.Objective.rst", "planner/generated/rtd.planner.trajopt.OptimizationEngine.rst", "planner/generated/rtd.planner.trajopt.RtdTrajOpt.rst", "planner/generated/rtd.planner.trajopt.ScipyOptimizationEngine.rst", "planner/generated/rtd.planner.trajopt.TrajOptProps.rst", "planner/planner.rst", "planner/rtd.rst", "setup.rst", "simulation/components.rst", "simulation/entities.rst", "simulation/simulation.rst", "simulation/simulations.rst", "simulation/systems.rst", "utils/options.rst", "utils/types.rst", "utils/utils.rst"], "titles": ["Rtd-Python Documentation", "Introduction", "Example RTD Planner Implementation of ARMOUR", "armour.reachsets.FOGenerator", "armour.reachsets.FOInstance", "armour.reachsets.IRSGenerator", "armour.reachsets.IRSInstance", "armour.reachsets.JLSGenerator", "armour.reachsets.JLSInstance", "armour.reachsets.JRSGenerator", "armour.reachsets.JRSInstance", "armour.trajectory.ArmTrajectoryFactory", "armour.trajectory.BernsteinArmTrajectory", "armour.trajectory.PiecewiseArmTrajectory", "armour.trajectory.ZeroHoldArmTrajectory", "rtd.planner.reachsets.ReachSetGenerator", "rtd.planner.reachsets.ReachSetInstance", "rtd.planner.trajectory.BadTrajectoryException", "rtd.planner.trajectory.InvalidTrajectory", "rtd.planner.trajectory.Trajectory", "rtd.planner.trajectory.TrajectoryContainer", "rtd.planner.trajectory.TrajectoryFactory", "rtd.planner.trajopt.GenericArmObjective", "rtd.planner.trajopt.Objective", "rtd.planner.trajopt.OptimizationEngine", "rtd.planner.trajopt.RtdTrajOpt", "rtd.planner.trajopt.ScipyOptimizationEngine", "rtd.planner.trajopt.TrajOptProps", "Planner Reference", "RTD Planner Interfaces and Base Classes", "Setup Guide", "Components for Entities and Agents", "Entities and Agents", "Simulation Reference", "Simulation Files and World Container", "Simulation Systems", "Options", "Type Hintings", "RTD Code Utilities Reference"], "terms": {"introduct": 0, "setup": [0, 34], "guid": [0, 35], "gener": [0, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 19, 20, 21, 22, 23, 25, 28, 31, 34, 35], "altern": [0, 29], "conda": 0, "quickstart": 0, "obtain": [0, 3, 5, 7, 9], "urdf": [0, 31], "planner": [0, 3, 5, 7, 9, 11], "refer": [0, 31, 35], "interfac": [0, 15, 23, 28], "base": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 36], "class": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36], "The": [0, 6, 8, 13, 14, 15, 16, 20, 25, 28, 32, 36], "reachabl": [0, 3, 5, 6, 7, 9, 15, 16, 22, 23, 25, 28], "set": [0, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 28, 31, 32, 35], "trajectori": [0, 22, 24, 25, 26, 27, 28, 31], "optim": [0, 19, 22, 23, 24, 25, 26, 27, 28], "compon": [0, 1, 2, 28, 32, 33, 35], "exampl": [0, 1, 28, 32], "implement": [0, 1, 28, 31, 32, 34, 35, 36], "armour": [0, 28, 30, 33, 37], "type": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 35, 36, 38], "factori": [0, 21, 22, 28], "simul": [0, 1, 29, 31, 32], "entiti": [0, 1, 15, 20, 25, 33, 34, 35], "agent": [0, 1, 33, 34], "worldent": [0, 33], "box": [0, 33], "obstacl": [0, 4, 6, 8, 10, 16, 33, 34], "system": [0, 1, 30, 31, 32, 33], "trimeshcollisionsystem": [0, 33], "pyvistavisualsystem": [0, 33], "file": [0, 1, 33], "world": [0, 6, 8, 16, 25, 29, 32, 33], "contain": [0, 15, 20, 24, 26, 31, 33], "model": [0, 31, 33], "code": [0, 1, 30, 36], "util": [0, 32, 36, 37], "option": [0, 2, 3, 5, 7, 9, 15, 19, 21, 25, 26, 30, 31, 32, 34, 35, 38], "hint": [0, 38], "built": [0, 3, 5, 7, 9, 15, 38], "numpi": [0, 22, 38], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 34, 35, 36], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35], "python": [1, 30], "origin": [1, 10, 13], "matlab": 1, "rtd": [1, 3, 5, 7, 9, 11, 28, 30, 31, 32, 34, 35, 36, 37], "architectur": [1, 32, 35], "It": [1, 3, 5, 7, 9, 15, 16, 19, 20, 25, 29, 31, 32, 34, 36], "one": [1, 2, 3, 5, 7, 9, 15, 29, 31], "few": [1, 32], "specif": [1, 16, 24, 26, 27, 31, 32], "chang": [1, 16, 19], "well": [1, 31, 35], "which": [1, 2, 13, 14, 15, 22, 29, 31, 32, 35, 36], "like": [1, 29], "get": [1, 3, 5, 7, 9, 15, 22, 23, 30, 31, 35], "backport": 1, "version": [1, 2, 25, 29, 34], "futur": 1, "pleas": [1, 30], "note": [1, 6, 8, 35], "mai": [1, 24, 26, 29, 31], "subject": 1, "signific": 1, "In": [1, 30, 34], "here": [1, 21, 37], "split": 1, "up": [1, 29, 32], "mani": 1, "differ": [1, 35], "packag": [1, 29, 30], "somewhat": 1, "flatten": 1, "out": [1, 15, 24, 26], "structur": 1, "smaller": 1, "behavior": [1, 31, 32], "an": [1, 2, 4, 5, 6, 8, 10, 16, 18, 19, 20, 22, 23, 24, 25, 26, 29, 31, 32, 34, 35, 36], "involv": 1, "look": 1, "pertain": 1, "instead": 1, "whole": 1, "addition": 1, "written": [1, 29], "intent": 1, "make": [1, 16], "more": [1, 32, 35], "explicit": 1, "For": [1, 30], "": [1, 4, 6, 8, 10, 15, 16, 20, 29, 31, 35, 36], "updat": [1, 12, 13, 14, 31, 32, 34, 35, 36], "function": [1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 19, 22, 23, 24, 26, 31, 32, 34, 36], "you": [1, 36], "now": 1, "write": [1, 36], "all": [1, 13, 14, 25, 31, 32, 34, 35, 36], "intern": [1, 12, 13, 14, 31, 35], "call": [1, 2, 3, 5, 7, 9, 13, 14, 15, 19, 20, 22, 23, 25, 29, 30, 31, 32, 35], "manual": 1, "can": [1, 15, 16, 19, 21, 22, 23, 27, 31, 32, 34, 35], "multipl": 1, "time": [1, 12, 13, 14, 19, 20, 22, 24, 26, 31, 32, 35], "per": [1, 35], "timestep": 1, "should": [1, 2, 6, 8, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 29, 31, 34, 35, 36], "track": [1, 12, 19, 31, 35], "across": [1, 27], "everyth": [1, 34], "1": [1, 4, 9, 27, 30, 31, 32, 35], "easier": 1, "manag": [1, 32], "2": [1, 27, 30, 31, 35, 37], "enabl": [1, 15, 35], "valid": [1, 2, 12, 13, 14, 18, 19, 20, 29, 35], "sure": 1, "part": [1, 19], "ar": [1, 2, 6, 8, 16, 24, 26, 29, 31, 35, 37], "accordingli": 1, "armourplann": 2, "relat": 2, "defin": [2, 31, 32], "describ": [2, 19], "michaux": 2, "et": 2, "al": 2, "http": 2, "arxiv": 2, "org": 2, "ab": 2, "2301": 2, "13308": 2, "requir": [2, 4, 30, 32, 36], "us": [2, 3, 5, 7, 9, 12, 15, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35], "match": 2, "robust": [2, 32], "control": [2, 31, 32, 35], "current": [2, 29, 31, 35, 36], "kinemat": 2, "onli": [2, 31, 35], "minim": 2, "trajoptprop": [2, 11, 12, 13, 22, 25, 26], "robot": [2, 3, 5, 7, 9, 15, 21, 22, 23, 25, 29, 30, 31], "armouragentinfo": [2, 31, 32], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 36], "rtdplanner": [2, 29], "static": [2, 3, 4, 6, 8, 22, 31, 32, 35, 36], "defaultopt": [2, 31, 32, 35, 36], "dict": [2, 3, 5, 7, 9, 11, 15, 21, 22, 23, 24, 25, 26, 31, 32, 34, 35, 36], "abstract": [2, 15, 16, 19, 21, 23, 24, 29, 31, 32, 34, 35, 36], "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 35, 36], "need": [2, 3, 5, 6, 7, 8, 9, 15, 25, 31, 34, 35, 36], "provid": [2, 3, 5, 6, 7, 8, 9, 15, 16, 22, 31, 32, 36], "default": [2, 27, 31, 32, 35, 36], "ani": [2, 3, 5, 7, 9, 15, 20, 21, 22, 23, 24, 29, 31, 32, 34, 35, 36], "given": [2, 3, 5, 7, 9, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 25, 29, 31, 35, 36], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 35, 36], "plantrajectori": [2, 29], "robotst": [2, 3, 5, 7, 9, 11, 15, 21, 22, 23, 25, 29], "entityst": [2, 3, 5, 7, 9, 11, 12, 15, 19, 20, 21, 22, 23, 25, 29], "worldstat": [2, 4, 6, 8, 10, 16, 25, 29], "waypoint": [2, 22, 23, 25, 29], "tupl": [2, 4, 24, 25, 26, 31, 32, 35], "Then": [2, 29], "each": [2, 22, 29, 31, 32, 34, 35], "we": [2, 3, 5, 6, 7, 8, 9, 15, 16, 22, 23, 25, 27, 29, 34], "plan": [2, 29], "solv": [2, 25, 26, 29], "either": [2, 25, 31, 32, 35], "paramet": [2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 34, 35, 36], "invalid": [2, 19, 20, 25, 29], "signal": 2, "continu": [2, 29], "loop": [2, 29, 31, 35], "over": [2, 29], "rtdtrajopt": [2, 29], "instanc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 21, 22, 23, 25, 29, 32, 34], "thu": [2, 29], "initi": [2, 10, 20, 21, 22, 23, 24, 25, 26, 29, 31, 34, 35], "guess": [2, 24, 25, 26, 29], "from": [2, 4, 6, 8, 13, 14, 19, 21, 22, 25, 29, 31, 32, 34, 35], "result": [2, 25, 29, 30, 32, 35], "select": [2, 29], "best": [2, 29, 30], "otherwis": [2, 25, 29, 32], "throw": [2, 12, 13, 14, 19, 29], "when": [2, 18, 20, 25, 29, 31], "attempt": [2, 13, 14, 29], "new": [2, 11, 15, 20, 29, 30, 31, 35], "ensur": [2, 19, 25, 29, 35], "old": [2, 29], "constraint": [2, 4, 6, 8, 16, 24, 25, 26], "follow": [2, 25, 29, 30, 32], "jrsgener": [3, 5, 7], "smooth_ob": 3, "bool": [3, 5, 7, 9, 12, 13, 14, 15, 19, 20, 24, 26, 27, 31, 32, 34, 35], "fals": [3, 5, 7, 9, 12, 13, 14, 15, 19, 20, 27, 31, 34], "obs_frs_comb": [3, 4], "none": [3, 11, 12, 13, 14, 21, 25, 29, 31, 32, 34, 35], "reachsetgener": [3, 5, 7, 9, 16, 25], "forwardoccup": 3, "act": [3, 15], "singl": [3, 15, 16, 34, 35], "forwardreachableset": 3, "foinstanc": 3, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27], "generatereachableset": [3, 5, 7, 9, 15], "int": [3, 4, 5, 6, 7, 8, 9, 15, 34, 35], "relev": [3, 5, 7, 9, 15, 21, 22, 23, 35], "output": [3, 5, 6, 7, 8, 9, 15, 16, 24, 25, 26], "singular": [3, 5, 7, 9, 15], "generate_combinations_upto": 3, "n": [3, 11, 12, 13, 14, 19, 21, 22, 24, 26, 30, 31], "list": [3, 4, 6, 8, 20, 31, 35, 37], "bunch": 3, "combin": [3, 25], "store": [3, 25, 27, 31, 35], "cell": 3, "getreachableset": [3, 5, 7, 9, 15], "ignore_cach": [3, 5, 7, 9, 15], "reachsetinst": [3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 21, 22, 23], "state": [3, 5, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 29, 31, 32], "passthrough": [3, 5, 7, 9, 15], "argument": [3, 5, 7, 9, 15, 19, 25, 32, 35], "handl": [3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 21, 22, 23, 25, 35], "how": [3, 5, 7, 9, 15], "actual": [3, 5, 7, 9, 12, 13, 14, 15, 19, 25, 32], "cach": [3, 5, 7, 9, 15, 16], "alreadi": [3, 5, 7, 9, 15, 20, 35], "anoth": [3, 5, 7, 9, 15, 30, 31, 35], "don": [3, 5, 7, 9, 15], "t": [3, 5, 7, 9, 12, 13, 14, 15, 19, 24, 25, 26, 31, 35], "want": [3, 5, 6, 7, 8, 9, 15, 16, 22, 23, 25, 29], "regener": [3, 5, 7, 9, 15], "onlin": [3, 5, 7, 9, 15], "perform": [3, 5, 7, 9, 15, 24, 25, 26], "id": [3, 5, 7, 9, 15], "string": [3, 5, 7, 9, 15], "cast": [3, 5, 7, 9, 15], "addit": [3, 5, 7, 9, 15, 19, 21, 25, 32], "If": [3, 5, 7, 9, 15, 16, 20, 25, 29, 34, 35], "true": [3, 5, 7, 9, 12, 15, 19, 31, 34], "bypass": [3, 5, 7, 9, 15], "altogeth": [3, 5, 7, 9, 15], "some": [3, 5, 7, 9, 15, 16, 19, 20, 22, 23, 29, 32, 34], "kei": [3, 5, 7, 9, 15, 31, 32, 35], "complet": [3, 5, 7, 9, 15], "ignor": [3, 5, 7, 9, 15], "A": [3, 5, 6, 7, 8, 9, 12, 15, 16, 19, 24, 25, 26, 27, 29, 31, 32, 35], "problem": [3, 5, 7, 9, 15, 22, 23, 29], "pair": [3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 25, 35, 37], "fo": 4, "jrsinstanc": [4, 6, 8, 9, 11, 12, 13], "jlsinstanc": [4, 7], "just": [4, 6, 8, 10, 16, 34], "individu": [4, 6, 8, 10, 16], "joint": [4, 8, 9, 22, 31], "limit": [4, 8, 31], "batch_obs_constraint": 4, "c": [4, 6, 8, 10, 16, 24, 26, 30], "callabl": [4, 6, 8, 10, 16, 22, 23, 24, 25, 26, 34], "grad_c": 4, "k": [4, 6, 8, 25], "float": [4, 19, 20, 22, 24, 25, 26, 27, 31, 32, 34, 35, 37], "made": [4, 13, 14, 22], "separ": [4, 35], "becaus": 4, "gradient": [4, 6, 8, 16], "know": 4, "index": [4, 27], "caus": 4, "max": [4, 31, 34, 37], "eval_constraint": [4, 6, 8], "n_c": [4, 6, 8], "obs_constraint": 4, "batch_siz": 4, "gennlconstraint": [4, 6, 8, 10, 16], "fr": [4, 6, 8, 10, 16], "similar": [4, 6, 8, 10, 16], "nlconstraint": [4, 6, 8, 10, 16], "where": [4, 6, 8, 10, 16, 24, 26], "ceq": [4, 6, 8, 10, 16, 24, 26], "gc": [4, 6, 8, 10, 16, 24, 26], "gceq": [4, 6, 8, 10, 16, 24, 26], "use_robost_input": 5, "inputreachableset": 5, "upper": 5, "lower": [5, 35], "bound": [5, 24, 25, 26, 35, 37], "input": [5, 6, 13, 14, 24, 25, 26, 31, 35], "creat": [5, 11, 15, 21, 22, 23, 29, 30, 31, 32, 35], "irsinst": 5, "object": [5, 9, 11, 15, 16, 19, 20, 21, 22, 24, 25, 26, 29, 31, 32, 34, 35, 36], "u_ub": 6, "zonopi": [6, 8, 30, 31], "polyzonotop": [6, 8], "u_lb": 6, "grad_constraint": [6, 8], "rememb": [6, 8], "smooth": [6, 8], "still": [6, 8, 32], "consid": [6, 8, 29], "nonlinear": [6, 8, 16, 24, 25, 26], "4": [6, 8, 16, 27, 35], "0": [6, 8, 15, 16, 27, 30, 31, 32, 34, 35], "respect": [6, 8, 16], "observ": [6, 8, 16, 25], "function_handl": [6, 8, 16, 22, 23], "q_ub": 8, "q_lb": 8, "dq_ub": 8, "dq_lb": 8, "taylor_degre": 9, "add_ultimate_bound": 9, "traj_typ": [9, 10, 11], "str": [9, 10, 11, 17, 21, 22, 23, 25, 32, 35], "piecewis": [9, 11, 13], "jointreachablesetsonlin": 9, "doe": [9, 35], "comput": [9, 12, 13, 14, 15, 19, 25], "wrap": 9, "create_jrs_onlin": 9, "armtd": [10, 13], "jr": 10, "trajectoryfactori": [11, 19, 22, 25], "createtrajectori": [11, 21], "rsinstanc": [11, 21, 25], "reachset": [11, 21, 22, 23, 25], "trajectoryparam": [11, 12, 13, 14, 19, 21, 22], "ndarrai": [11, 12, 13, 14, 19, 20, 21, 22, 24, 26, 31, 37], "shape": [11, 12, 13, 14, 19, 21, 22, 24, 26, 31], "float64": [11, 12, 13, 14, 19, 21, 22, 24, 26, 31], "zeroholdarmtrajectori": 11, "piecewisearmtrajectori": 11, "bernsteinarmtrajectori": 11, "startstat": [12, 13, 14], "armrobotst": [12, 13, 14, 31], "getcommand": [12, 13, 14, 19, 20], "invalidtrajectori": [12, 13, 14, 19], "isn": [12, 13, 14, 19], "take": [12, 19, 23, 31, 32, 35, 36], "vecnp": [12, 19, 24, 26, 37], "vector": [12, 19, 31], "calcul": [12, 13, 19], "desir": [12, 15, 19, 21, 30, 32, 35], "internalupd": [12, 13, 14], "reduc": [12, 13], "long": [12, 13], "term": [12, 13], "setparamet": [12, 13, 14, 19], "throwonerror": [12, 13, 14, 19], "fulli": [12, 13, 14, 19, 21], "character": [12, 13, 14], "acceler": 13, "constructor": [13, 14, 19], "simpli": [13, 14], "helper": [13, 14, 22], "other": [13, 14, 20, 35], "onc": [13, 14, 34], "parameter": [13, 14, 19, 21], "command": [13, 14, 20, 30], "focu": [13, 14, 19], "reacheabl": 15, "cache_max_s": [15, 16], "extra": 15, "pass": [15, 25], "through": [15, 30], "encapsul": [15, 19, 25], "offlin": 15, "reachableset": [15, 21, 22, 23, 25, 29], "alwai": 15, "reachablesetinst": 15, "hold": [16, 21, 31, 34, 36], "necessari": [16, 23, 25, 32, 35], "inform": [16, 22, 23], "atom": 16, "properti": [16, 21, 22, 27, 31, 32, 36], "disabl": 16, "except": [17, 18], "messag": 17, "thrown": [18, 20], "fail": 18, "convers": 19, "those": 19, "also": [19, 27, 32, 36], "allow": [19, 32], "entir": 19, "param": [19, 22, 23, 24], "while": [19, 35], "start": [19, 20, 27, 31, 34], "right": 19, "ha": [19, 25], "error": [19, 20], "incorrect": 19, "whether": [19, 20, 31, 32, 34, 35], "clear": 20, "reset": [20, 31, 32, 35], "expect": [20, 24, 26, 35], "warn": 20, "activ": [20, 30], "befor": [20, 34, 35], "first": [20, 27, 31], "after": [20, 31, 34], "last": [20, 31], "isvalid": 20, "errorifinvalid": 20, "check": [20, 31, 32, 35], "rais": [20, 27], "setinitialtrajectori": 20, "initialtrajectori": 20, "must": [20, 31, 32], "add": [20, 25, 31, 34, 35, 36], "settrajectori": [20, 31], "end": [20, 25], "greater": 20, "than": [20, 27, 35], "equal": 20, "instac": 21, "modul": [21, 22, 25], "py": [21, 22, 25, 30], "construct": [21, 22, 25, 27, 29, 32], "them": [21, 31, 35], "trajectoryparm": 21, "uniqu": 22, "overal": [22, 29, 34], "cost": [22, 23, 24, 25, 26], "evaltrajectori": 22, "nptype": [22, 24, 26], "base_meta_class": 22, "trajectoryobj": 22, "q_de": 22, "t_cost": 22, "pure": [22, 32], "access": 22, "without": 22, "evalu": 22, "work": [22, 32], "arm": 22, "space": 22, "genobject": [22, 23], "callback": [22, 23, 24, 26], "valu": [22, 23, 27, 29, 31], "grad_cost": [22, 23], "timeout": [22, 23], "optimizationengin": [22, 23, 25, 26, 29], "itself": [22, 23], "goal": [22, 23, 34], "close": [22, 23, 35], "form": [22, 23], "def": [22, 23], "objectivecallback": [22, 23, 24, 25, 26], "extend": [23, 31, 35], "optmiz": 23, "engin": [23, 26], "transform": [23, 31, 35], "special": [23, 25, 29, 32], "place": [23, 30], "insid": [23, 30, 37], "sort": [24, 36], "performoptim": [24, 26], "initialguess": [24, 25, 26], "constraintcallback": [24, 26], "correct": [24, 26], "size": [24, 25, 26, 31], "account": 24, "success": [24, 25, 26, 32], "wa": [24, 26, 31], "didn": [24, 26], "final": [24, 25, 26], "found": [24, 26, 29], "core": [25, 29, 32], "routin": 25, "request": [25, 31], "reachbl": 25, "main": 25, "aspect": 25, "ideal": 25, "veri": 25, "littl": 25, "between": [25, 35], "merge_constraint": 25, "nlconcallback": 25, "buffer_s": 25, "16": 25, "functor": 25, "lookup": 25, "speed": [25, 35], "findbuff": 25, "exist": [25, 32, 34, 35], "buffer": 25, "updatebuff": 25, "re": 25, "solvetrajopt": 25, "sim": [25, 32, 34, 35], "rsadditionalarg": 25, "execut": [25, 31, 34], "solver": 25, "info": [25, 31, 32, 35], "entri": 25, "num_paramet": 25, "past": 25, "name": [25, 32], "correspond": [25, 31, 32, 35], "wasn": [25, 31], "empti": [25, 29], "data": [25, 31, 32, 35], "scipi": 26, "fsolv": 26, "timeforcost": 27, "plantim": 27, "5": [27, 32, 34], "horizontim": 27, "dotimeout": 27, "timeouttim": 27, "randominit": 27, "namedtupl": 27, "consist": 27, "rather": 27, "ones": 27, "immut": [27, 31], "attribut": 27, "count": 27, "number": [27, 31, 34, 35, 36], "occurr": 27, "alia": [27, 37], "field": 27, "3": [27, 30], "stop": [27, 34], "9223372036854775807": 27, "valueerror": 27, "present": 27, "mid": 29, "level": 29, "specifi": [29, 32, 34, 35], "midlevel": 29, "rel": 29, "isol": [29, 34], "rest": 29, "anyth": 29, "do": 29, "hand": [29, 32], "determin": 29, "That": 29, "someth": 29, "trajopt": 29, "higher": 30, "11": 30, "clone": 30, "repositori": 30, "open": 30, "termin": 30, "root": 30, "directori": 30, "instal": 30, "virtualenv": 30, "m": [30, 31], "pip": 30, "virtual": 30, "environ": 30, "venv": 30, "rtd_venv": 30, "script": 30, "its": [30, 31, 35], "depend": 30, "r": [30, 32], "txt": 30, "demo": 30, "run": [30, 34, 35], "wai": [30, 32], "creation": 30, "your": 30, "folder": 30, "pytorch": 30, "adjust": 30, "torch": 30, "accord": 30, "torchvis": 30, "15": 30, "torchaudio": 30, "cuda": 30, "8": 30, "nvidia": 30, "git": 30, "github": 30, "com": 30, "roahmlab": 30, "e": [30, 32], "To": 30, "visit": 30, "download": 30, "parent": [30, 35], "order": 30, "planner_demo": 30, "categor": [31, 32], "have": 31, "purpos": 31, "intrins": 31, "dynam": [31, 32, 34, 35], "same": 31, "explicitli": [31, 34], "point": 31, "basecontrollercompon": 31, "getcontrolinput": 31, "basedynamicscompon": 31, "move": [31, 32], "t_move": [31, 32], "baseinfocompon": 31, "ti": 31, "along": 31, "mixin": [31, 36, 37], "basestatecompon": 31, "refernc": 31, "storag": 31, "commit_state_data": 31, "append": [31, 35], "commit": 31, "vec": [31, 37], "get_stat": 31, "certain": 31, "random_init": 31, "randomli": 31, "genericentityst": [31, 32], "entity_info": 31, "n_state": [31, 32], "matrix": [31, 35], "keep": 31, "interv": 31, "moment": 31, "retriev": 31, "most": [31, 35], "recent": [31, 35], "No": 31, "though": 31, "common": 31, "initial_st": 31, "interpol": 31, "state_rang": 31, "save_to_opt": 31, "rang": [31, 35], "start_rang": 31, "inclus": 31, "Will": [31, 34], "save": [31, 32, 35], "so": 31, "revert": 31, "min": [31, 37], "random": 31, "box_obstacl": [31, 32], "boxobstacleinfo": [31, 32], "dimens": [31, 32], "color": [31, 32], "boxobstaclevisu": [31, 32], "box_info": 31, "box_stat": 31, "pyvistavisualobject": [31, 34, 35], "visual": [31, 32, 34, 35], "plot": [31, 35], "create_plot_data": [31, 35], "pyvista": [31, 35], "actor": [31, 35], "plot_data": [31, 35], "plotdata": 31, "boxobstalc": 31, "boxobstaclecollis": [31, 32], "dynamiccollisionobject": [31, 34, 35], "getcollisionobject": [31, 35], "collisionobject": [31, 34, 35], "collis": [31, 32, 34, 35], "boxobstaclezonotop": [31, 32], "get_zonotop": 31, "zonotop": 31, "boxobstacl": [31, 32], "armouragentcollis": [31, 32], "arm_info": 31, "arm_stat": 31, "armouragentst": [31, 32], "q": 31, "configur": [31, 36], "Not": 31, "demand": 31, "urchin": 31, "m_min_eigenvalu": 31, "graviti": 31, "transmission_inertia": 31, "buffer_dist": 31, "t_state": 31, "z_state": 31, "commit_move_data": 31, "associ": 31, "input_tim": 31, "npfvec": 31, "npfmat": 31, "armourag": [31, 32, 34], "joint_limit_check": 31, "t_check_step": [31, 32], "did": 31, "exce": 31, "step": [31, 32, 34], "exceed": 31, "posit": 31, "pos_rang": 31, "vel_rang": 31, "random_posit": 31, "random_veloc": 31, "veloc": 31, "armouragentvisu": [31, 32], "trimesh": [31, 35], "mesh": [31, 35], "convert": 31, "replac": 31, "pose": 31, "armourcontrol": [31, 32], "armouridealagentdynam": [31, 32], "arm_control": 31, "assum": [31, 35], "perfectli": 31, "controller_input_check": 31, "give": 31, "bad": 31, "torqu": 31, "armourmexcontrol": 31, "varieti": 32, "mix": 32, "ec": [32, 35], "aggreg": 32, "case": 32, "deriv": 32, "prescrib": 32, "assist": 32, "composit": 32, "ad": 32, "demonstr": 32, "concret": 32, "detail": 32, "comment": 32, "below": 32, "construct_compon": 32, "component_nam": 32, "component_arg": 32, "self": [32, 35], "component_opt": 32, "g": 32, "get_componentopt": 32, "inherit": 32, "pull": 32, "get_componentoverrideopt": 32, "under": 32, "emptyinfost": 32, "reset_compon": 32, "everi": [32, 35], "equival": 32, "represent": 32, "3d": 32, "make_box": 32, "center": 32, "dim": 32, "x": [32, 35], "y": [32, 35], "z": 32, "coordin": 32, "b": 32, "boxobtacl": 32, "successfulli": 32, "joint_limit": 32, "control_input": 32, "ultimate_bound": 32, "what": 34, "export": 34, "soon": 34, "basesimul": 34, "add_object": 34, "post_step": 34, "pre_step": 34, "lifecycl": 34, "iter": 34, "length": [34, 35], "embed": 34, "summari": 34, "armoursimul": 34, "simulate_timestep": 34, "isent": 34, "treat": 34, "handler": 34, "max_step": 34, "100000000": 34, "pre_step_callback": 34, "step_callback": 34, "post_step_callback": 34, "stop_on_go": 34, "maximum": 34, "reach": 34, "popul": 34, "tailor": 35, "adapt": 35, "dure": 35, "These": 35, "retain": 35, "synchron": 35, "flexibl": 35, "whenev": 35, "incollis": 35, "collid": 35, "quick": 35, "against": 35, "usual": 35, "resolv": 35, "static_object": 35, "dynamic_object": 35, "simulationsystem": 35, "detect": 35, "addobject": 35, "checkcollisionattim": 35, "happen": 35, "occur": 35, "n_pair": 35, "checkcollisionobject": 35, "collision_obj": 35, "remov": 35, "updatecollis": 35, "t_updat": 35, "durat": 35, "clientvisualobject": 35, "render": 35, "meshdata": 35, "websocket": 35, "plot_obj": 35, "isplotdatavalid": 35, "is_valid": 35, "rotat": 35, "matric": 35, "anim": 35, "move_msg": 35, "movemsg": 35, "clientvisualsystem": 35, "clientsimulationsystem": 35, "t_span": 35, "time_discret": 35, "pause_tim": 35, "divid": 35, "frame": 35, "wait": 35, "second": 35, "next": 35, "discret": 35, "smoother": 35, "faster": 35, "paus": 35, "get_discretization_and_paus": 35, "framer": 35, "30": 35, "mean": 35, "ratio": 35, "connect": 35, "server": 35, "updatevisu": 35, "figur": 35, "axlim": 35, "lim": 35, "redraw": 35, "recreat": 35, "plotter": 35, "validateorcreatefigur": 35, "longer": 35, "_plotter": 35, "waituntilclos": 35, "until": 35, "proceed": 35, "easi": 36, "complex": 36, "introduc": 36, "instanceopt": 36, "includ": 36, "merg": 36, "getopt": 36, "copi": 36, "mergeopt": 36, "newopt": 36, "1d": 37, "mat": 37, "2d": 37, "row": 37, "matnp": 37, "boundsnp": 37}, "objects": {"armour": [[32, 0, 1, "", "ArmourAgent"], [34, 0, 1, "", "ArmourSimulation"], [31, 2, 0, "-", "agent"], [2, 2, 0, "-", "reachsets"], [2, 2, 0, "-", "trajectory"]], "armour.ArmourAgent": [[32, 1, 1, "", "defaultoptions"], [32, 1, 1, "", "reset"], [32, 1, 1, "", "update"]], "armour.ArmourPlanner": [[2, 0, 1, "", "ArmourPlanner"]], "armour.ArmourPlanner.ArmourPlanner": [[2, 1, 1, "", "defaultoptions"], [2, 1, 1, "", "planTrajectory"]], "armour.ArmourSimulation": [[34, 1, 1, "", "add_object"], [34, 1, 1, "", "initialize"], [34, 1, 1, "", "post_step"], [34, 1, 1, "", "pre_step"], [34, 1, 1, "", "run"], [34, 1, 1, "", "setup"], [34, 1, 1, "", "step"], [34, 1, 1, "", "summary"]], "armour.agent": [[31, 0, 1, "", "ArmourAgentCollision"], [31, 0, 1, "", "ArmourAgentInfo"], [31, 0, 1, "", "ArmourAgentState"], [31, 0, 1, "", "ArmourAgentVisual"], [31, 0, 1, "", "ArmourController"], [31, 0, 1, "", "ArmourIdealAgentDynamics"], [31, 0, 1, "", "ArmourMexController"]], "armour.agent.ArmourAgentCollision": [[31, 1, 1, "", "getCollisionObject"], [31, 1, 1, "", "reset"]], "armour.agent.ArmourAgentInfo": [[31, 1, 1, "", "defaultoptions"], [31, 1, 1, "", "reset"]], "armour.agent.ArmourAgentState": [[31, 1, 1, "", "commit_state_data"], [31, 1, 1, "", "defaultoptions"], [31, 1, 1, "", "get_state"], [31, 1, 1, "", "joint_limit_check"], [31, 3, 1, "", "position"], [31, 1, 1, "", "random_init"], [31, 1, 1, "", "reset"], [31, 3, 1, "", "velocity"]], "armour.agent.ArmourAgentVisual": [[31, 1, 1, "", "create_plot_data"], [31, 1, 1, "", "defaultoptions"], [31, 1, 1, "", "plot"], [31, 1, 1, "", "reset"]], "armour.agent.ArmourController": [[31, 1, 1, "", "defaultoptions"], [31, 1, 1, "", "getControlInputs"], [31, 1, 1, "", "reset"], [31, 1, 1, "", "setTrajectory"]], "armour.agent.ArmourIdealAgentDynamics": [[31, 1, 1, "", "controller_input_check"], [31, 1, 1, "", "defaultoptions"], [31, 1, 1, "", "move"], [31, 1, 1, "", "reset"]], "armour.reachsets": [[3, 0, 1, "", "FOGenerator"], [4, 0, 1, "", "FOInstance"], [5, 0, 1, "", "IRSGenerator"], [6, 0, 1, "", "IRSInstance"], [7, 0, 1, "", "JLSGenerator"], [8, 0, 1, "", "JLSInstance"], [9, 0, 1, "", "JRSGenerator"], [10, 0, 1, "", "JRSInstance"]], "armour.reachsets.FOGenerator": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "generateReachableSet"], [3, 1, 1, "", "generate_combinations_upto"], [3, 1, 1, "", "getReachableSet"]], "armour.reachsets.FOInstance": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "batch_obs_constraint"], [4, 1, 1, "", "eval_constraints"], [4, 1, 1, "", "genNLConstraint"]], "armour.reachsets.IRSGenerator": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "generateReachableSet"], [5, 1, 1, "", "getReachableSet"]], "armour.reachsets.IRSInstance": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "eval_constraints"], [6, 1, 1, "", "genNLConstraint"]], "armour.reachsets.JLSGenerator": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "generateReachableSet"], [7, 1, 1, "", "getReachableSet"]], "armour.reachsets.JLSInstance": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "eval_constraints"], [8, 1, 1, "", "genNLConstraint"]], "armour.reachsets.JRSGenerator": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "generateReachableSet"], [9, 1, 1, "", "getReachableSet"]], "armour.reachsets.JRSInstance": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "genNLConstraint"], [10, 1, 1, "", "initialize"]], "armour.trajectory": [[11, 0, 1, "", "ArmTrajectoryFactory"], [12, 0, 1, "", "BernsteinArmTrajectory"], [13, 0, 1, "", "PiecewiseArmTrajectory"], [14, 0, 1, "", "ZeroHoldArmTrajectory"]], "armour.trajectory.ArmTrajectoryFactory": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "createTrajectory"]], "armour.trajectory.BernsteinArmTrajectory": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "getCommand"], [12, 1, 1, "", "internalUpdate"], [12, 1, 1, "", "setParameters"], [12, 1, 1, "", "validate"]], "armour.trajectory.PiecewiseArmTrajectory": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "getCommand"], [13, 1, 1, "", "internalUpdate"], [13, 1, 1, "", "setParameters"], [13, 1, 1, "", "validate"]], "armour.trajectory.ZeroHoldArmTrajectory": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "getCommand"], [14, 1, 1, "", "setParameters"], [14, 1, 1, "", "validate"]], "rtd.entity.box_obstacle": [[32, 0, 1, "", "BoxObstacle"], [31, 0, 1, "", "BoxObstacleCollision"], [31, 0, 1, "", "BoxObstacleInfo"], [31, 0, 1, "", "BoxObstacleVisual"], [31, 0, 1, "", "BoxObstacleZonotope"]], "rtd.entity.box_obstacle.BoxObstacle": [[32, 1, 1, "", "defaultoptions"], [32, 1, 1, "", "make_box"], [32, 1, 1, "", "reset"]], "rtd.entity.box_obstacle.BoxObstacleCollision": [[31, 1, 1, "", "getCollisionObject"], [31, 1, 1, "", "reset"]], "rtd.entity.box_obstacle.BoxObstacleInfo": [[31, 1, 1, "", "defaultoptions"], [31, 1, 1, "", "reset"]], "rtd.entity.box_obstacle.BoxObstacleVisual": [[31, 1, 1, "", "create_plot_data"], [31, 1, 1, "", "defaultoptions"], [31, 1, 1, "", "plot"], [31, 1, 1, "", "reset"]], "rtd.entity.box_obstacle.BoxObstacleZonotope": [[31, 1, 1, "", "get_zonotope"], [31, 1, 1, "", "reset"]], "rtd.entity": [[31, 2, 0, "-", "components"]], "rtd.entity.components": [[31, 0, 1, "", "BaseControllerComponent"], [31, 0, 1, "", "BaseDynamicsComponent"], [31, 0, 1, "", "BaseInfoComponent"], [31, 0, 1, "", "BaseStateComponent"], [31, 0, 1, "", "GenericEntityState"]], "rtd.entity.components.BaseControllerComponent": [[31, 1, 1, "", "getControlInputs"], [31, 1, 1, "", "reset"], [31, 1, 1, "", "setTrajectory"]], "rtd.entity.components.BaseDynamicsComponent": [[31, 1, 1, "", "move"], [31, 1, 1, "", "reset"]], "rtd.entity.components.BaseInfoComponent": [[31, 1, 1, "", "reset"]], "rtd.entity.components.BaseStateComponent": [[31, 1, 1, "", "commit_state_data"], [31, 1, 1, "", "get_state"], [31, 1, 1, "", "random_init"], [31, 1, 1, "", "reset"]], "rtd.entity.components.GenericEntityState": [[31, 1, 1, "", "commit_state_data"], [31, 1, 1, "", "defaultoptions"], [31, 1, 1, "", "get_state"], [31, 1, 1, "", "random_init"], [31, 1, 1, "", "reset"]], "rtd.planner": [[29, 0, 1, "", "RtdPlanner"], [29, 2, 0, "-", "reachsets"], [29, 2, 0, "-", "trajectory"], [29, 2, 0, "-", "trajopt"]], "rtd.planner.RtdPlanner": [[29, 1, 1, "", "planTrajectory"]], "rtd.planner.reachsets": [[15, 0, 1, "", "ReachSetGenerator"], [16, 0, 1, "", "ReachSetInstance"]], "rtd.planner.reachsets.ReachSetGenerator": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "generateReachableSet"], [15, 1, 1, "", "getReachableSet"]], "rtd.planner.reachsets.ReachSetInstance": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "genNLConstraint"]], "rtd.planner.trajectory": [[17, 4, 1, "", "BadTrajectoryException"], [18, 4, 1, "", "InvalidTrajectory"], [19, 0, 1, "", "Trajectory"], [20, 0, 1, "", "TrajectoryContainer"], [21, 0, 1, "", "TrajectoryFactory"]], "rtd.planner.trajectory.Trajectory": [[19, 1, 1, "", "__init__"], [19, 1, 1, "", "getCommand"], [19, 1, 1, "", "setParameters"], [19, 1, 1, "", "validate"]], "rtd.planner.trajectory.TrajectoryContainer": [[20, 1, 1, "", "__init__"], [20, 1, 1, "", "clear"], [20, 1, 1, "", "getCommand"], [20, 1, 1, "", "isValid"], [20, 1, 1, "", "setInitialTrajectory"], [20, 1, 1, "", "setTrajectory"]], "rtd.planner.trajectory.TrajectoryFactory": [[21, 1, 1, "", "__init__"], [21, 1, 1, "", "createTrajectory"]], "rtd.planner.trajopt": [[22, 0, 1, "", "GenericArmObjective"], [23, 0, 1, "", "Objective"], [24, 0, 1, "", "OptimizationEngine"], [25, 0, 1, "", "RtdTrajOpt"], [26, 0, 1, "", "ScipyOptimizationEngine"], [27, 0, 1, "", "TrajOptProps"]], "rtd.planner.trajopt.GenericArmObjective": [[22, 1, 1, "", "__init__"], [22, 1, 1, "", "evalTrajectory"], [22, 1, 1, "", "genObjective"]], "rtd.planner.trajopt.Objective": [[23, 1, 1, "", "__init__"], [23, 1, 1, "", "genObjective"]], "rtd.planner.trajopt.OptimizationEngine": [[24, 1, 1, "", "__init__"], [24, 1, 1, "", "performOptimization"]], "rtd.planner.trajopt.RtdTrajOpt": [[25, 1, 1, "", "__init__"], [25, 0, 1, "", "merge_constraints"], [25, 1, 1, "", "solveTrajOpt"]], "rtd.planner.trajopt.RtdTrajOpt.merge_constraints": [[25, 1, 1, "", "findBuffer"], [25, 1, 1, "", "updateBuffer"]], "rtd.planner.trajopt.ScipyOptimizationEngine": [[26, 1, 1, "", "__init__"], [26, 1, 1, "", "performOptimization"]], "rtd.planner.trajopt.TrajOptProps": [[27, 1, 1, "", "__init__"], [27, 1, 1, "", "count"], [27, 5, 1, "", "doTimeout"], [27, 5, 1, "", "horizonTime"], [27, 1, 1, "", "index"], [27, 5, 1, "", "planTime"], [27, 5, 1, "", "randomInit"], [27, 5, 1, "", "timeForCost"], [27, 5, 1, "", "timeoutTime"]], "rtd.sim": [[34, 0, 1, "", "BaseSimulation"]], "rtd.sim.BaseSimulation": [[34, 1, 1, "", "add_object"], [34, 1, 1, "", "initialize"], [34, 1, 1, "", "post_step"], [34, 1, 1, "", "pre_step"], [34, 1, 1, "", "run"], [34, 1, 1, "", "setup"], [34, 1, 1, "", "step"], [34, 1, 1, "", "summary"]], "rtd.sim.systems": [[35, 2, 0, "-", "collision"], [35, 2, 0, "-", "visual"]], "rtd.sim.systems.collision": [[35, 0, 1, "", "CollisionObject"], [35, 0, 1, "", "DynamicCollisionObject"], [35, 0, 1, "", "TrimeshCollisionSystem"]], "rtd.sim.systems.collision.CollisionObject": [[35, 1, 1, "", "inCollision"]], "rtd.sim.systems.collision.DynamicCollisionObject": [[35, 1, 1, "", "getCollisionObject"]], "rtd.sim.systems.collision.TrimeshCollisionSystem": [[35, 1, 1, "", "addObjects"], [35, 1, 1, "", "checkCollisionAtTime"], [35, 1, 1, "", "checkCollisionObject"], [35, 1, 1, "", "defaultoptions"], [35, 1, 1, "", "remove"], [35, 1, 1, "", "reset"], [35, 1, 1, "", "updateCollision"]], "rtd.sim.systems.visual": [[35, 0, 1, "", "ClientVisualObject"], [35, 0, 1, "", "ClientVisualSystem"], [35, 0, 1, "", "PyvistaVisualObject"], [35, 0, 1, "", "PyvistaVisualSystem"]], "rtd.sim.systems.visual.ClientVisualObject": [[35, 1, 1, "", "create_plot_data"], [35, 1, 1, "", "isPlotDataValid"], [35, 1, 1, "", "plot"]], "rtd.sim.systems.visual.ClientVisualSystem": [[35, 1, 1, "", "addObjects"], [35, 1, 1, "", "animate"], [35, 1, 1, "", "defaultoptions"], [35, 1, 1, "", "get_discretization_and_pause"], [35, 1, 1, "", "remove"], [35, 1, 1, "", "reset"], [35, 1, 1, "", "updateVisual"]], "rtd.sim.systems.visual.PyvistaVisualObject": [[35, 1, 1, "", "create_plot_data"], [35, 1, 1, "", "isPlotDataValid"], [35, 1, 1, "", "plot"]], "rtd.sim.systems.visual.PyvistaVisualSystem": [[35, 1, 1, "", "addObjects"], [35, 1, 1, "", "animate"], [35, 1, 1, "", "defaultoptions"], [35, 1, 1, "", "get_discretization_and_pause"], [35, 1, 1, "", "redraw"], [35, 1, 1, "", "remove"], [35, 1, 1, "", "reset"], [35, 1, 1, "", "updateVisual"], [35, 1, 1, "", "validateOrCreateFigure"], [35, 1, 1, "", "waituntilclose"]], "rtd.sim.world": [[32, 0, 1, "", "WorldEntity"]], "rtd.sim.world.WorldEntity": [[32, 1, 1, "", "construct_components"], [32, 1, 1, "", "get_componentOptions"], [32, 1, 1, "", "get_componentOverrideOptions"], [32, 1, 1, "", "reset_components"]], "rtd.util.mixins.Options": [[36, 0, 1, "", "Options"]], "rtd.util.mixins.Options.Options": [[36, 1, 1, "", "defaultoptions"], [36, 1, 1, "", "getoptions"], [36, 1, 1, "", "mergeoptions"]], "rtd.util.mixins.Typings": [[37, 6, 1, "", "Bound"], [37, 6, 1, "", "Bounds"], [37, 6, 1, "", "Boundsnp"], [37, 6, 1, "", "Mat"], [37, 6, 1, "", "Matnp"], [37, 6, 1, "", "Vec"], [37, 6, 1, "", "Vecnp"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:property", "4": "py:exception", "5": "py:attribute", "6": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "property", "Python property"], "4": ["py", "exception", "Python exception"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"]}, "titleterms": {"rtd": [0, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 38], "python": 0, "document": 0, "content": [0, 28, 33, 38], "introduct": 1, "exampl": 2, "planner": [2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "implement": 2, "armour": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 34], "The": [2, 29], "base": [2, 29, 31, 32, 34], "reachabl": [2, 29], "set": [2, 29], "gener": [2, 29, 30], "trajectori": [2, 11, 12, 13, 14, 17, 18, 19, 20, 21, 29], "type": [2, 37], "factori": 2, "reachset": [3, 4, 5, 6, 7, 8, 9, 10, 15, 16], "fogener": 3, "foinstanc": 4, "irsgener": 5, "irsinst": 6, "jlsgener": 7, "jlsinstanc": 8, "jrsgener": 9, "jrsinstanc": 10, "armtrajectoryfactori": 11, "bernsteinarmtrajectori": 12, "piecewisearmtrajectori": 13, "zeroholdarmtrajectori": 14, "reachsetgener": 15, "reachsetinst": 16, "badtrajectoryexcept": 17, "invalidtrajectori": 18, "trajectorycontain": 20, "trajectoryfactori": 21, "trajopt": [22, 23, 24, 25, 26, 27], "genericarmobject": 22, "object": 23, "optimizationengin": 24, "rtdtrajopt": 25, "scipyoptimizationengin": 26, "trajoptprop": 27, "refer": [28, 33, 38], "interfac": 29, "class": [29, 32], "optim": 29, "compon": [29, 31], "setup": 30, "guid": 30, "altern": 30, "conda": 30, "quickstart": 30, "obtain": 30, "urdf": 30, "entiti": [31, 32], "agent": [31, 32], "box": [31, 32], "obstacl": [31, 32], "worldent": 32, "simul": [33, 34, 35], "file": 34, "world": 34, "contain": 34, "model": 34, "system": 35, "trimeshcollisionsystem": 35, "pyvistavisualsystem": 35, "option": 36, "hint": 37, "built": 37, "numpi": 37, "code": 38, "util": 38}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Rtd-Python Documentation": [[0, "rtd-python-documentation"]], "Contents:": [[0, null], [28, null], [33, null], [38, null]], "Introduction": [[1, "introduction"]], "Example RTD Planner Implementation of ARMOUR": [[2, "example-rtd-planner-implementation-of-armour"]], "The Base ARMOUR Planner": [[2, "the-base-armour-planner"]], "Reachable Set Generation": [[2, "module-armour.reachsets"]], "Trajectory Types and Factory": [[2, "module-armour.trajectory"]], "armour.reachsets.FOGenerator": [[3, "armour-reachsets-fogenerator"]], "armour.reachsets.FOInstance": [[4, "armour-reachsets-foinstance"]], "armour.reachsets.IRSGenerator": [[5, "armour-reachsets-irsgenerator"]], "armour.reachsets.IRSInstance": [[6, "armour-reachsets-irsinstance"]], "armour.reachsets.JLSGenerator": [[7, "armour-reachsets-jlsgenerator"]], "armour.reachsets.JLSInstance": [[8, "armour-reachsets-jlsinstance"]], "armour.reachsets.JRSGenerator": [[9, "armour-reachsets-jrsgenerator"]], "armour.reachsets.JRSInstance": [[10, "armour-reachsets-jrsinstance"]], "armour.trajectory.ArmTrajectoryFactory": [[11, "armour-trajectory-armtrajectoryfactory"]], "armour.trajectory.BernsteinArmTrajectory": [[12, "armour-trajectory-bernsteinarmtrajectory"]], "armour.trajectory.PiecewiseArmTrajectory": [[13, "armour-trajectory-piecewisearmtrajectory"]], "armour.trajectory.ZeroHoldArmTrajectory": [[14, "armour-trajectory-zeroholdarmtrajectory"]], "rtd.planner.reachsets.ReachSetGenerator": [[15, "rtd-planner-reachsets-reachsetgenerator"]], "rtd.planner.reachsets.ReachSetInstance": [[16, "rtd-planner-reachsets-reachsetinstance"]], "rtd.planner.trajectory.BadTrajectoryException": [[17, "rtd-planner-trajectory-badtrajectoryexception"]], "rtd.planner.trajectory.InvalidTrajectory": [[18, "rtd-planner-trajectory-invalidtrajectory"]], "rtd.planner.trajectory.Trajectory": [[19, "rtd-planner-trajectory-trajectory"]], "rtd.planner.trajectory.TrajectoryContainer": [[20, "rtd-planner-trajectory-trajectorycontainer"]], "rtd.planner.trajectory.TrajectoryFactory": [[21, "rtd-planner-trajectory-trajectoryfactory"]], "rtd.planner.trajopt.GenericArmObjective": [[22, "rtd-planner-trajopt-genericarmobjective"]], "rtd.planner.trajopt.Objective": [[23, "rtd-planner-trajopt-objective"]], "rtd.planner.trajopt.OptimizationEngine": [[24, "rtd-planner-trajopt-optimizationengine"]], "rtd.planner.trajopt.RtdTrajOpt": [[25, "rtd-planner-trajopt-rtdtrajopt"]], "rtd.planner.trajopt.ScipyOptimizationEngine": [[26, "rtd-planner-trajopt-scipyoptimizationengine"]], "rtd.planner.trajopt.TrajOptProps": [[27, "rtd-planner-trajopt-trajoptprops"]], "Planner Reference": [[28, "planner-reference"]], "RTD Planner Interfaces and Base Classes": [[29, "rtd-planner-interfaces-and-base-classes"]], "The RTD Planner": [[29, "the-rtd-planner"]], "Reachable Sets Generation Interfaces": [[29, "module-rtd.planner.reachsets"]], "Trajectory Interfaces": [[29, "module-rtd.planner.trajectory"]], "Trajectory Optimization Interfaces & Components": [[29, "module-rtd.planner.trajopt"]], "Setup Guide": [[30, "setup-guide"]], "General Setup": [[30, "general-setup"]], "(Alternative) Conda Quickstart": [[30, "alternative-conda-quickstart"]], "Obtaining URDFs": [[30, "obtaining-urdfs"]], "Components for Entities and Agents": [[31, "components-for-entities-and-agents"]], "Base Components": [[31, "module-rtd.entity.components"]], "Box Obstacle Components": [[31, "box-obstacle-components"]], "Armour Components": [[31, "module-armour.agent"]], "Entities and Agents": [[32, "entities-and-agents"]], "Base Entity Class (WorldEntity)": [[32, "base-entity-class-worldentity"]], "Box Obstacle Entity": [[32, "box-obstacle-entity"]], "Armour Agent": [[32, "armour-agent"]], "Simulation Reference": [[33, "simulation-reference"]], "Simulation Files and World Container": [[34, "simulation-files-and-world-container"]], "World Model Container": [[34, "world-model-container"]], "Base Simulation": [[34, "base-simulation"]], "Armour Simulation": [[34, "armour-simulation"]], "Simulation Systems": [[35, "simulation-systems"]], "TrimeshCollisionSystem": [[35, "module-rtd.sim.systems.collision"]], "PyvistaVisualSystem": [[35, "module-rtd.sim.systems.visual"]], "Options": [[36, "options"]], "Type Hintings": [[37, "type-hintings"]], "Built-in Types": [[37, "built-in-types"]], "Numpy Types": [[37, "numpy-types"]], "RTD Code Utilities Reference": [[38, "rtd-code-utilities-reference"]]}, "indexentries": {"armourplanner (class in armour.armourplanner)": [[2, "armour.ArmourPlanner.ArmourPlanner"]], "armour.reachsets": [[2, "module-armour.reachsets"]], "armour.trajectory": [[2, "module-armour.trajectory"]], "defaultoptions() (armour.armourplanner.armourplanner static method)": [[2, "armour.ArmourPlanner.ArmourPlanner.defaultoptions"]], "module": [[2, "module-armour.reachsets"], [2, "module-armour.trajectory"], [29, "module-rtd.planner.reachsets"], [29, "module-rtd.planner.trajectory"], [29, "module-rtd.planner.trajopt"], [31, "module-armour.agent"], [31, "module-rtd.entity.components"], [35, "module-rtd.sim.systems.collision"], [35, "module-rtd.sim.systems.visual"]], "plantrajectory() (armour.armourplanner.armourplanner method)": [[2, "armour.ArmourPlanner.ArmourPlanner.planTrajectory"]], "fogenerator (class in armour.reachsets)": [[3, "armour.reachsets.FOGenerator"]], "__init__() (armour.reachsets.fogenerator method)": [[3, "armour.reachsets.FOGenerator.__init__"]], "generatereachableset() (armour.reachsets.fogenerator method)": [[3, "armour.reachsets.FOGenerator.generateReachableSet"]], "generate_combinations_upto() (armour.reachsets.fogenerator static method)": [[3, "armour.reachsets.FOGenerator.generate_combinations_upto"]], "getreachableset() (armour.reachsets.fogenerator method)": [[3, "armour.reachsets.FOGenerator.getReachableSet"]], "foinstance (class in armour.reachsets)": [[4, "armour.reachsets.FOInstance"]], "__init__() (armour.reachsets.foinstance method)": [[4, "armour.reachsets.FOInstance.__init__"]], "batch_obs_constraint() (armour.reachsets.foinstance method)": [[4, "armour.reachsets.FOInstance.batch_obs_constraint"]], "eval_constraints() (armour.reachsets.foinstance static method)": [[4, "armour.reachsets.FOInstance.eval_constraints"]], "gennlconstraint() (armour.reachsets.foinstance method)": [[4, "armour.reachsets.FOInstance.genNLConstraint"]], "irsgenerator (class in armour.reachsets)": [[5, "armour.reachsets.IRSGenerator"]], "__init__() (armour.reachsets.irsgenerator method)": [[5, "armour.reachsets.IRSGenerator.__init__"]], "generatereachableset() (armour.reachsets.irsgenerator method)": [[5, "armour.reachsets.IRSGenerator.generateReachableSet"]], "getreachableset() (armour.reachsets.irsgenerator method)": [[5, "armour.reachsets.IRSGenerator.getReachableSet"]], "irsinstance (class in armour.reachsets)": [[6, "armour.reachsets.IRSInstance"]], "__init__() (armour.reachsets.irsinstance method)": [[6, "armour.reachsets.IRSInstance.__init__"]], "eval_constraints() (armour.reachsets.irsinstance static method)": [[6, "armour.reachsets.IRSInstance.eval_constraints"]], "gennlconstraint() (armour.reachsets.irsinstance method)": [[6, "armour.reachsets.IRSInstance.genNLConstraint"]], "jlsgenerator (class in armour.reachsets)": [[7, "armour.reachsets.JLSGenerator"]], "__init__() (armour.reachsets.jlsgenerator method)": [[7, "armour.reachsets.JLSGenerator.__init__"]], "generatereachableset() (armour.reachsets.jlsgenerator method)": [[7, "armour.reachsets.JLSGenerator.generateReachableSet"]], "getreachableset() (armour.reachsets.jlsgenerator method)": [[7, "armour.reachsets.JLSGenerator.getReachableSet"]], "jlsinstance (class in armour.reachsets)": [[8, "armour.reachsets.JLSInstance"]], "__init__() (armour.reachsets.jlsinstance method)": [[8, "armour.reachsets.JLSInstance.__init__"]], "eval_constraints() (armour.reachsets.jlsinstance static method)": [[8, "armour.reachsets.JLSInstance.eval_constraints"]], "gennlconstraint() (armour.reachsets.jlsinstance method)": [[8, "armour.reachsets.JLSInstance.genNLConstraint"]], "jrsgenerator (class in armour.reachsets)": [[9, "armour.reachsets.JRSGenerator"]], "__init__() (armour.reachsets.jrsgenerator method)": [[9, "armour.reachsets.JRSGenerator.__init__"]], "generatereachableset() (armour.reachsets.jrsgenerator method)": [[9, "armour.reachsets.JRSGenerator.generateReachableSet"]], "getreachableset() (armour.reachsets.jrsgenerator method)": [[9, "armour.reachsets.JRSGenerator.getReachableSet"]], "jrsinstance (class in armour.reachsets)": [[10, "armour.reachsets.JRSInstance"]], "__init__() (armour.reachsets.jrsinstance method)": [[10, "armour.reachsets.JRSInstance.__init__"]], "gennlconstraint() (armour.reachsets.jrsinstance method)": [[10, "armour.reachsets.JRSInstance.genNLConstraint"]], "initialize() (armour.reachsets.jrsinstance method)": [[10, "armour.reachsets.JRSInstance.initialize"]], "armtrajectoryfactory (class in armour.trajectory)": [[11, "armour.trajectory.ArmTrajectoryFactory"]], "__init__() (armour.trajectory.armtrajectoryfactory method)": [[11, "armour.trajectory.ArmTrajectoryFactory.__init__"]], "createtrajectory() (armour.trajectory.armtrajectoryfactory method)": [[11, "armour.trajectory.ArmTrajectoryFactory.createTrajectory"]], "bernsteinarmtrajectory (class in armour.trajectory)": [[12, "armour.trajectory.BernsteinArmTrajectory"]], "__init__() (armour.trajectory.bernsteinarmtrajectory method)": [[12, "armour.trajectory.BernsteinArmTrajectory.__init__"]], "getcommand() (armour.trajectory.bernsteinarmtrajectory method)": [[12, "armour.trajectory.BernsteinArmTrajectory.getCommand"]], "internalupdate() (armour.trajectory.bernsteinarmtrajectory method)": [[12, "armour.trajectory.BernsteinArmTrajectory.internalUpdate"]], "setparameters() (armour.trajectory.bernsteinarmtrajectory method)": [[12, "armour.trajectory.BernsteinArmTrajectory.setParameters"]], "validate() (armour.trajectory.bernsteinarmtrajectory method)": [[12, "armour.trajectory.BernsteinArmTrajectory.validate"]], "piecewisearmtrajectory (class in armour.trajectory)": [[13, "armour.trajectory.PiecewiseArmTrajectory"]], "__init__() (armour.trajectory.piecewisearmtrajectory method)": [[13, "armour.trajectory.PiecewiseArmTrajectory.__init__"]], "getcommand() (armour.trajectory.piecewisearmtrajectory method)": [[13, "armour.trajectory.PiecewiseArmTrajectory.getCommand"]], "internalupdate() (armour.trajectory.piecewisearmtrajectory method)": [[13, "armour.trajectory.PiecewiseArmTrajectory.internalUpdate"]], "setparameters() (armour.trajectory.piecewisearmtrajectory method)": [[13, "armour.trajectory.PiecewiseArmTrajectory.setParameters"]], "validate() (armour.trajectory.piecewisearmtrajectory method)": [[13, "armour.trajectory.PiecewiseArmTrajectory.validate"]], "zeroholdarmtrajectory (class in armour.trajectory)": [[14, "armour.trajectory.ZeroHoldArmTrajectory"]], "__init__() (armour.trajectory.zeroholdarmtrajectory method)": [[14, "armour.trajectory.ZeroHoldArmTrajectory.__init__"]], "getcommand() (armour.trajectory.zeroholdarmtrajectory method)": [[14, "armour.trajectory.ZeroHoldArmTrajectory.getCommand"]], "setparameters() (armour.trajectory.zeroholdarmtrajectory method)": [[14, "armour.trajectory.ZeroHoldArmTrajectory.setParameters"]], "validate() (armour.trajectory.zeroholdarmtrajectory method)": [[14, "armour.trajectory.ZeroHoldArmTrajectory.validate"]], "reachsetgenerator (class in rtd.planner.reachsets)": [[15, "rtd.planner.reachsets.ReachSetGenerator"]], "__init__() (rtd.planner.reachsets.reachsetgenerator method)": [[15, "rtd.planner.reachsets.ReachSetGenerator.__init__"]], "generatereachableset() (rtd.planner.reachsets.reachsetgenerator method)": [[15, "rtd.planner.reachsets.ReachSetGenerator.generateReachableSet"]], "getreachableset() (rtd.planner.reachsets.reachsetgenerator method)": [[15, "rtd.planner.reachsets.ReachSetGenerator.getReachableSet"]], "reachsetinstance (class in rtd.planner.reachsets)": [[16, "rtd.planner.reachsets.ReachSetInstance"]], "__init__() (rtd.planner.reachsets.reachsetinstance method)": [[16, "rtd.planner.reachsets.ReachSetInstance.__init__"]], "gennlconstraint() (rtd.planner.reachsets.reachsetinstance method)": [[16, "rtd.planner.reachsets.ReachSetInstance.genNLConstraint"]], "badtrajectoryexception": [[17, "rtd.planner.trajectory.BadTrajectoryException"]], "invalidtrajectory": [[18, "rtd.planner.trajectory.InvalidTrajectory"]], "trajectory (class in rtd.planner.trajectory)": [[19, "rtd.planner.trajectory.Trajectory"]], "__init__() (rtd.planner.trajectory.trajectory method)": [[19, "rtd.planner.trajectory.Trajectory.__init__"]], "getcommand() (rtd.planner.trajectory.trajectory method)": [[19, "rtd.planner.trajectory.Trajectory.getCommand"]], "setparameters() (rtd.planner.trajectory.trajectory method)": [[19, "rtd.planner.trajectory.Trajectory.setParameters"]], "validate() (rtd.planner.trajectory.trajectory method)": [[19, "rtd.planner.trajectory.Trajectory.validate"]], "trajectorycontainer (class in rtd.planner.trajectory)": [[20, "rtd.planner.trajectory.TrajectoryContainer"]], "__init__() (rtd.planner.trajectory.trajectorycontainer method)": [[20, "rtd.planner.trajectory.TrajectoryContainer.__init__"]], "clear() (rtd.planner.trajectory.trajectorycontainer method)": [[20, "rtd.planner.trajectory.TrajectoryContainer.clear"]], "getcommand() (rtd.planner.trajectory.trajectorycontainer method)": [[20, "rtd.planner.trajectory.TrajectoryContainer.getCommand"]], "isvalid() (rtd.planner.trajectory.trajectorycontainer method)": [[20, "rtd.planner.trajectory.TrajectoryContainer.isValid"]], "setinitialtrajectory() (rtd.planner.trajectory.trajectorycontainer method)": [[20, "rtd.planner.trajectory.TrajectoryContainer.setInitialTrajectory"]], "settrajectory() (rtd.planner.trajectory.trajectorycontainer method)": [[20, "rtd.planner.trajectory.TrajectoryContainer.setTrajectory"]], "trajectoryfactory (class in rtd.planner.trajectory)": [[21, "rtd.planner.trajectory.TrajectoryFactory"]], "__init__() (rtd.planner.trajectory.trajectoryfactory method)": [[21, "rtd.planner.trajectory.TrajectoryFactory.__init__"]], "createtrajectory() (rtd.planner.trajectory.trajectoryfactory method)": [[21, "rtd.planner.trajectory.TrajectoryFactory.createTrajectory"]], "genericarmobjective (class in rtd.planner.trajopt)": [[22, "rtd.planner.trajopt.GenericArmObjective"]], "__init__() (rtd.planner.trajopt.genericarmobjective method)": [[22, "rtd.planner.trajopt.GenericArmObjective.__init__"]], "evaltrajectory() (rtd.planner.trajopt.genericarmobjective static method)": [[22, "rtd.planner.trajopt.GenericArmObjective.evalTrajectory"]], "genobjective() (rtd.planner.trajopt.genericarmobjective method)": [[22, "rtd.planner.trajopt.GenericArmObjective.genObjective"]], "objective (class in rtd.planner.trajopt)": [[23, "rtd.planner.trajopt.Objective"]], "__init__() (rtd.planner.trajopt.objective method)": [[23, "rtd.planner.trajopt.Objective.__init__"]], "genobjective() (rtd.planner.trajopt.objective method)": [[23, "rtd.planner.trajopt.Objective.genObjective"]], "optimizationengine (class in rtd.planner.trajopt)": [[24, "rtd.planner.trajopt.OptimizationEngine"]], "__init__() (rtd.planner.trajopt.optimizationengine method)": [[24, "rtd.planner.trajopt.OptimizationEngine.__init__"]], "performoptimization() (rtd.planner.trajopt.optimizationengine method)": [[24, "rtd.planner.trajopt.OptimizationEngine.performOptimization"]], "rtdtrajopt (class in rtd.planner.trajopt)": [[25, "rtd.planner.trajopt.RtdTrajOpt"]], "rtdtrajopt.merge_constraints (class in rtd.planner.trajopt)": [[25, "rtd.planner.trajopt.RtdTrajOpt.merge_constraints"]], "__init__() (rtd.planner.trajopt.rtdtrajopt method)": [[25, "rtd.planner.trajopt.RtdTrajOpt.__init__"]], "findbuffer() (rtd.planner.trajopt.rtdtrajopt.merge_constraints method)": [[25, "rtd.planner.trajopt.RtdTrajOpt.merge_constraints.findBuffer"]], "solvetrajopt() (rtd.planner.trajopt.rtdtrajopt method)": [[25, "rtd.planner.trajopt.RtdTrajOpt.solveTrajOpt"]], "updatebuffer() (rtd.planner.trajopt.rtdtrajopt.merge_constraints method)": [[25, "rtd.planner.trajopt.RtdTrajOpt.merge_constraints.updateBuffer"]], "scipyoptimizationengine (class in rtd.planner.trajopt)": [[26, "rtd.planner.trajopt.ScipyOptimizationEngine"]], "__init__() (rtd.planner.trajopt.scipyoptimizationengine method)": [[26, "rtd.planner.trajopt.ScipyOptimizationEngine.__init__"]], "performoptimization() (rtd.planner.trajopt.scipyoptimizationengine method)": [[26, "rtd.planner.trajopt.ScipyOptimizationEngine.performOptimization"]], "trajoptprops (class in rtd.planner.trajopt)": [[27, "rtd.planner.trajopt.TrajOptProps"]], "__init__() (rtd.planner.trajopt.trajoptprops method)": [[27, "rtd.planner.trajopt.TrajOptProps.__init__"]], "count() (rtd.planner.trajopt.trajoptprops method)": [[27, "rtd.planner.trajopt.TrajOptProps.count"]], "dotimeout (rtd.planner.trajopt.trajoptprops attribute)": [[27, "rtd.planner.trajopt.TrajOptProps.doTimeout"]], "horizontime (rtd.planner.trajopt.trajoptprops attribute)": [[27, "rtd.planner.trajopt.TrajOptProps.horizonTime"]], "index() (rtd.planner.trajopt.trajoptprops method)": [[27, "rtd.planner.trajopt.TrajOptProps.index"]], "plantime (rtd.planner.trajopt.trajoptprops attribute)": [[27, "rtd.planner.trajopt.TrajOptProps.planTime"]], "randominit (rtd.planner.trajopt.trajoptprops attribute)": [[27, "rtd.planner.trajopt.TrajOptProps.randomInit"]], "timeforcost (rtd.planner.trajopt.trajoptprops attribute)": [[27, "rtd.planner.trajopt.TrajOptProps.timeForCost"]], "timeouttime (rtd.planner.trajopt.trajoptprops attribute)": [[27, "rtd.planner.trajopt.TrajOptProps.timeoutTime"]], "rtdplanner (class in rtd.planner)": [[29, "rtd.planner.RtdPlanner"]], "plantrajectory() (rtd.planner.rtdplanner method)": [[29, "rtd.planner.RtdPlanner.planTrajectory"]], "rtd.planner.reachsets": [[29, "module-rtd.planner.reachsets"]], "rtd.planner.trajectory": [[29, "module-rtd.planner.trajectory"]], "rtd.planner.trajopt": [[29, "module-rtd.planner.trajopt"]], "armouragentcollision (class in armour.agent)": [[31, "armour.agent.ArmourAgentCollision"]], "armouragentinfo (class in armour.agent)": [[31, "armour.agent.ArmourAgentInfo"]], "armouragentstate (class in armour.agent)": [[31, "armour.agent.ArmourAgentState"]], "armouragentvisual (class in armour.agent)": [[31, "armour.agent.ArmourAgentVisual"]], "armourcontroller (class in armour.agent)": [[31, "armour.agent.ArmourController"]], "armouridealagentdynamics (class in armour.agent)": [[31, "armour.agent.ArmourIdealAgentDynamics"]], "armourmexcontroller (class in armour.agent)": [[31, "armour.agent.ArmourMexController"]], "basecontrollercomponent (class in rtd.entity.components)": [[31, "rtd.entity.components.BaseControllerComponent"]], "basedynamicscomponent (class in rtd.entity.components)": [[31, "rtd.entity.components.BaseDynamicsComponent"]], "baseinfocomponent (class in rtd.entity.components)": [[31, "rtd.entity.components.BaseInfoComponent"]], "basestatecomponent (class in rtd.entity.components)": [[31, "rtd.entity.components.BaseStateComponent"]], "boxobstaclecollision (class in rtd.entity.box_obstacle)": [[31, "rtd.entity.box_obstacle.BoxObstacleCollision"]], "boxobstacleinfo (class in rtd.entity.box_obstacle)": [[31, "rtd.entity.box_obstacle.BoxObstacleInfo"]], "boxobstaclevisual (class in rtd.entity.box_obstacle)": [[31, "rtd.entity.box_obstacle.BoxObstacleVisual"]], "boxobstaclezonotope (class in rtd.entity.box_obstacle)": [[31, "rtd.entity.box_obstacle.BoxObstacleZonotope"]], "genericentitystate (class in rtd.entity.components)": [[31, "rtd.entity.components.GenericEntityState"]], "armour.agent": [[31, "module-armour.agent"]], "commit_state_data() (armour.agent.armouragentstate method)": [[31, "armour.agent.ArmourAgentState.commit_state_data"]], "commit_state_data() (rtd.entity.components.basestatecomponent method)": [[31, "rtd.entity.components.BaseStateComponent.commit_state_data"]], "commit_state_data() (rtd.entity.components.genericentitystate method)": [[31, "rtd.entity.components.GenericEntityState.commit_state_data"]], "controller_input_check() (armour.agent.armouridealagentdynamics method)": [[31, "armour.agent.ArmourIdealAgentDynamics.controller_input_check"]], "create_plot_data() (armour.agent.armouragentvisual method)": [[31, "armour.agent.ArmourAgentVisual.create_plot_data"]], "create_plot_data() (rtd.entity.box_obstacle.boxobstaclevisual method)": [[31, "rtd.entity.box_obstacle.BoxObstacleVisual.create_plot_data"]], "defaultoptions() (armour.agent.armouragentinfo static method)": [[31, "armour.agent.ArmourAgentInfo.defaultoptions"]], "defaultoptions() (armour.agent.armouragentstate static method)": [[31, "armour.agent.ArmourAgentState.defaultoptions"]], "defaultoptions() (armour.agent.armouragentvisual static method)": [[31, "armour.agent.ArmourAgentVisual.defaultoptions"]], "defaultoptions() (armour.agent.armourcontroller static method)": [[31, "armour.agent.ArmourController.defaultoptions"]], "defaultoptions() (armour.agent.armouridealagentdynamics static method)": [[31, "armour.agent.ArmourIdealAgentDynamics.defaultoptions"]], "defaultoptions() (rtd.entity.box_obstacle.boxobstacleinfo static method)": [[31, "rtd.entity.box_obstacle.BoxObstacleInfo.defaultoptions"]], "defaultoptions() (rtd.entity.box_obstacle.boxobstaclevisual static method)": [[31, "rtd.entity.box_obstacle.BoxObstacleVisual.defaultoptions"]], "defaultoptions() (rtd.entity.components.genericentitystate static method)": [[31, "rtd.entity.components.GenericEntityState.defaultoptions"]], "getcollisionobject() (armour.agent.armouragentcollision method)": [[31, "armour.agent.ArmourAgentCollision.getCollisionObject"]], "getcollisionobject() (rtd.entity.box_obstacle.boxobstaclecollision method)": [[31, "rtd.entity.box_obstacle.BoxObstacleCollision.getCollisionObject"]], "getcontrolinputs() (armour.agent.armourcontroller method)": [[31, "armour.agent.ArmourController.getControlInputs"]], "getcontrolinputs() (rtd.entity.components.basecontrollercomponent method)": [[31, "rtd.entity.components.BaseControllerComponent.getControlInputs"]], "get_state() (armour.agent.armouragentstate method)": [[31, "armour.agent.ArmourAgentState.get_state"]], "get_state() (rtd.entity.components.basestatecomponent method)": [[31, "rtd.entity.components.BaseStateComponent.get_state"]], "get_state() (rtd.entity.components.genericentitystate method)": [[31, "rtd.entity.components.GenericEntityState.get_state"]], "get_zonotope() (rtd.entity.box_obstacle.boxobstaclezonotope method)": [[31, "rtd.entity.box_obstacle.BoxObstacleZonotope.get_zonotope"]], "joint_limit_check() (armour.agent.armouragentstate method)": [[31, "armour.agent.ArmourAgentState.joint_limit_check"]], "move() (armour.agent.armouridealagentdynamics method)": [[31, "armour.agent.ArmourIdealAgentDynamics.move"]], "move() (rtd.entity.components.basedynamicscomponent method)": [[31, "rtd.entity.components.BaseDynamicsComponent.move"]], "plot() (armour.agent.armouragentvisual method)": [[31, "armour.agent.ArmourAgentVisual.plot"]], "plot() (rtd.entity.box_obstacle.boxobstaclevisual method)": [[31, "rtd.entity.box_obstacle.BoxObstacleVisual.plot"]], "position (armour.agent.armouragentstate property)": [[31, "armour.agent.ArmourAgentState.position"]], "random_init() (armour.agent.armouragentstate method)": [[31, "armour.agent.ArmourAgentState.random_init"]], "random_init() (rtd.entity.components.basestatecomponent method)": [[31, "rtd.entity.components.BaseStateComponent.random_init"]], "random_init() (rtd.entity.components.genericentitystate method)": [[31, "rtd.entity.components.GenericEntityState.random_init"]], "reset() (armour.agent.armouragentcollision method)": [[31, "armour.agent.ArmourAgentCollision.reset"]], "reset() (armour.agent.armouragentinfo method)": [[31, "armour.agent.ArmourAgentInfo.reset"]], "reset() (armour.agent.armouragentstate method)": [[31, "armour.agent.ArmourAgentState.reset"]], "reset() (armour.agent.armouragentvisual method)": [[31, "armour.agent.ArmourAgentVisual.reset"]], "reset() (armour.agent.armourcontroller method)": [[31, "armour.agent.ArmourController.reset"]], "reset() (armour.agent.armouridealagentdynamics method)": [[31, "armour.agent.ArmourIdealAgentDynamics.reset"]], "reset() (rtd.entity.box_obstacle.boxobstaclecollision method)": [[31, "rtd.entity.box_obstacle.BoxObstacleCollision.reset"]], "reset() (rtd.entity.box_obstacle.boxobstacleinfo method)": [[31, "rtd.entity.box_obstacle.BoxObstacleInfo.reset"]], "reset() (rtd.entity.box_obstacle.boxobstaclevisual method)": [[31, "rtd.entity.box_obstacle.BoxObstacleVisual.reset"]], "reset() (rtd.entity.box_obstacle.boxobstaclezonotope method)": [[31, "rtd.entity.box_obstacle.BoxObstacleZonotope.reset"]], "reset() (rtd.entity.components.basecontrollercomponent method)": [[31, "rtd.entity.components.BaseControllerComponent.reset"]], "reset() (rtd.entity.components.basedynamicscomponent method)": [[31, "rtd.entity.components.BaseDynamicsComponent.reset"]], "reset() (rtd.entity.components.baseinfocomponent method)": [[31, "rtd.entity.components.BaseInfoComponent.reset"]], "reset() (rtd.entity.components.basestatecomponent method)": [[31, "rtd.entity.components.BaseStateComponent.reset"]], "reset() (rtd.entity.components.genericentitystate method)": [[31, "rtd.entity.components.GenericEntityState.reset"]], "rtd.entity.components": [[31, "module-rtd.entity.components"]], "settrajectory() (armour.agent.armourcontroller method)": [[31, "armour.agent.ArmourController.setTrajectory"]], "settrajectory() (rtd.entity.components.basecontrollercomponent method)": [[31, "rtd.entity.components.BaseControllerComponent.setTrajectory"]], "velocity (armour.agent.armouragentstate property)": [[31, "armour.agent.ArmourAgentState.velocity"]], "armouragent (class in armour)": [[32, "armour.ArmourAgent"]], "boxobstacle (class in rtd.entity.box_obstacle)": [[32, "rtd.entity.box_obstacle.BoxObstacle"]], "worldentity (class in rtd.sim.world)": [[32, "rtd.sim.world.WorldEntity"]], "construct_components() (rtd.sim.world.worldentity method)": [[32, "rtd.sim.world.WorldEntity.construct_components"]], "defaultoptions() (armour.armouragent static method)": [[32, "armour.ArmourAgent.defaultoptions"]], "defaultoptions() (rtd.entity.box_obstacle.boxobstacle static method)": [[32, "rtd.entity.box_obstacle.BoxObstacle.defaultoptions"]], "get_componentoptions() (rtd.sim.world.worldentity static method)": [[32, "rtd.sim.world.WorldEntity.get_componentOptions"]], "get_componentoverrideoptions() (rtd.sim.world.worldentity static method)": [[32, "rtd.sim.world.WorldEntity.get_componentOverrideOptions"]], "make_box() (rtd.entity.box_obstacle.boxobstacle static method)": [[32, "rtd.entity.box_obstacle.BoxObstacle.make_box"]], "reset() (armour.armouragent method)": [[32, "armour.ArmourAgent.reset"]], "reset() (rtd.entity.box_obstacle.boxobstacle method)": [[32, "rtd.entity.box_obstacle.BoxObstacle.reset"]], "reset_components() (rtd.sim.world.worldentity method)": [[32, "rtd.sim.world.WorldEntity.reset_components"]], "update() (armour.armouragent method)": [[32, "armour.ArmourAgent.update"]], "armoursimulation (class in armour)": [[34, "armour.ArmourSimulation"]], "basesimulation (class in rtd.sim)": [[34, "rtd.sim.BaseSimulation"]], "add_object() (armour.armoursimulation method)": [[34, "armour.ArmourSimulation.add_object"]], "add_object() (rtd.sim.basesimulation method)": [[34, "rtd.sim.BaseSimulation.add_object"]], "initialize() (armour.armoursimulation method)": [[34, "armour.ArmourSimulation.initialize"]], "initialize() (rtd.sim.basesimulation method)": [[34, "rtd.sim.BaseSimulation.initialize"]], "post_step() (armour.armoursimulation method)": [[34, "armour.ArmourSimulation.post_step"]], "post_step() (rtd.sim.basesimulation method)": [[34, "rtd.sim.BaseSimulation.post_step"]], "pre_step() (armour.armoursimulation method)": [[34, "armour.ArmourSimulation.pre_step"]], "pre_step() (rtd.sim.basesimulation method)": [[34, "rtd.sim.BaseSimulation.pre_step"]], "run() (armour.armoursimulation method)": [[34, "armour.ArmourSimulation.run"]], "run() (rtd.sim.basesimulation method)": [[34, "rtd.sim.BaseSimulation.run"]], "setup() (armour.armoursimulation method)": [[34, "armour.ArmourSimulation.setup"]], "setup() (rtd.sim.basesimulation method)": [[34, "rtd.sim.BaseSimulation.setup"]], "step() (armour.armoursimulation method)": [[34, "armour.ArmourSimulation.step"]], "step() (rtd.sim.basesimulation method)": [[34, "rtd.sim.BaseSimulation.step"]], "summary() (armour.armoursimulation method)": [[34, "armour.ArmourSimulation.summary"]], "summary() (rtd.sim.basesimulation method)": [[34, "rtd.sim.BaseSimulation.summary"]], "clientvisualobject (class in rtd.sim.systems.visual)": [[35, "rtd.sim.systems.visual.ClientVisualObject"]], "clientvisualsystem (class in rtd.sim.systems.visual)": [[35, "rtd.sim.systems.visual.ClientVisualSystem"]], "collisionobject (class in rtd.sim.systems.collision)": [[35, "rtd.sim.systems.collision.CollisionObject"]], "dynamiccollisionobject (class in rtd.sim.systems.collision)": [[35, "rtd.sim.systems.collision.DynamicCollisionObject"]], "pyvistavisualobject (class in rtd.sim.systems.visual)": [[35, "rtd.sim.systems.visual.PyvistaVisualObject"]], "pyvistavisualsystem (class in rtd.sim.systems.visual)": [[35, "rtd.sim.systems.visual.PyvistaVisualSystem"]], "trimeshcollisionsystem (class in rtd.sim.systems.collision)": [[35, "rtd.sim.systems.collision.TrimeshCollisionSystem"]], "addobjects() (rtd.sim.systems.collision.trimeshcollisionsystem method)": [[35, "rtd.sim.systems.collision.TrimeshCollisionSystem.addObjects"]], "addobjects() (rtd.sim.systems.visual.clientvisualsystem method)": [[35, "rtd.sim.systems.visual.ClientVisualSystem.addObjects"]], "addobjects() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[35, "rtd.sim.systems.visual.PyvistaVisualSystem.addObjects"]], "animate() (rtd.sim.systems.visual.clientvisualsystem method)": [[35, "rtd.sim.systems.visual.ClientVisualSystem.animate"]], "animate() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[35, "rtd.sim.systems.visual.PyvistaVisualSystem.animate"]], "checkcollisionattime() (rtd.sim.systems.collision.trimeshcollisionsystem method)": [[35, "rtd.sim.systems.collision.TrimeshCollisionSystem.checkCollisionAtTime"]], "checkcollisionobject() (rtd.sim.systems.collision.trimeshcollisionsystem method)": [[35, "rtd.sim.systems.collision.TrimeshCollisionSystem.checkCollisionObject"]], "create_plot_data() (rtd.sim.systems.visual.clientvisualobject method)": [[35, "rtd.sim.systems.visual.ClientVisualObject.create_plot_data"]], "create_plot_data() (rtd.sim.systems.visual.pyvistavisualobject method)": [[35, "rtd.sim.systems.visual.PyvistaVisualObject.create_plot_data"]], "defaultoptions() (rtd.sim.systems.collision.trimeshcollisionsystem static method)": [[35, "rtd.sim.systems.collision.TrimeshCollisionSystem.defaultoptions"]], "defaultoptions() (rtd.sim.systems.visual.clientvisualsystem static method)": [[35, "rtd.sim.systems.visual.ClientVisualSystem.defaultoptions"]], "defaultoptions() (rtd.sim.systems.visual.pyvistavisualsystem static method)": [[35, "rtd.sim.systems.visual.PyvistaVisualSystem.defaultoptions"]], "getcollisionobject() (rtd.sim.systems.collision.dynamiccollisionobject method)": [[35, "rtd.sim.systems.collision.DynamicCollisionObject.getCollisionObject"]], "get_discretization_and_pause() (rtd.sim.systems.visual.clientvisualsystem static method)": [[35, "rtd.sim.systems.visual.ClientVisualSystem.get_discretization_and_pause"]], "get_discretization_and_pause() (rtd.sim.systems.visual.pyvistavisualsystem static method)": [[35, "rtd.sim.systems.visual.PyvistaVisualSystem.get_discretization_and_pause"]], "incollision() (rtd.sim.systems.collision.collisionobject method)": [[35, "rtd.sim.systems.collision.CollisionObject.inCollision"]], "isplotdatavalid() (rtd.sim.systems.visual.clientvisualobject method)": [[35, "rtd.sim.systems.visual.ClientVisualObject.isPlotDataValid"]], "isplotdatavalid() (rtd.sim.systems.visual.pyvistavisualobject method)": [[35, "rtd.sim.systems.visual.PyvistaVisualObject.isPlotDataValid"]], "plot() (rtd.sim.systems.visual.clientvisualobject method)": [[35, "rtd.sim.systems.visual.ClientVisualObject.plot"]], "plot() (rtd.sim.systems.visual.pyvistavisualobject method)": [[35, "rtd.sim.systems.visual.PyvistaVisualObject.plot"]], "redraw() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[35, "rtd.sim.systems.visual.PyvistaVisualSystem.redraw"]], "remove() (rtd.sim.systems.collision.trimeshcollisionsystem method)": [[35, "rtd.sim.systems.collision.TrimeshCollisionSystem.remove"]], "remove() (rtd.sim.systems.visual.clientvisualsystem method)": [[35, "rtd.sim.systems.visual.ClientVisualSystem.remove"]], "remove() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[35, "rtd.sim.systems.visual.PyvistaVisualSystem.remove"]], "reset() (rtd.sim.systems.collision.trimeshcollisionsystem method)": [[35, "rtd.sim.systems.collision.TrimeshCollisionSystem.reset"]], "reset() (rtd.sim.systems.visual.clientvisualsystem method)": [[35, "rtd.sim.systems.visual.ClientVisualSystem.reset"]], "reset() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[35, "rtd.sim.systems.visual.PyvistaVisualSystem.reset"]], "rtd.sim.systems.collision": [[35, "module-rtd.sim.systems.collision"]], "rtd.sim.systems.visual": [[35, "module-rtd.sim.systems.visual"]], "updatecollision() (rtd.sim.systems.collision.trimeshcollisionsystem method)": [[35, "rtd.sim.systems.collision.TrimeshCollisionSystem.updateCollision"]], "updatevisual() (rtd.sim.systems.visual.clientvisualsystem method)": [[35, "rtd.sim.systems.visual.ClientVisualSystem.updateVisual"]], "updatevisual() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[35, "rtd.sim.systems.visual.PyvistaVisualSystem.updateVisual"]], "validateorcreatefigure() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[35, "rtd.sim.systems.visual.PyvistaVisualSystem.validateOrCreateFigure"]], "waituntilclose() (rtd.sim.systems.visual.pyvistavisualsystem method)": [[35, "rtd.sim.systems.visual.PyvistaVisualSystem.waituntilclose"]], "options (class in rtd.util.mixins.options)": [[36, "rtd.util.mixins.Options.Options"]], "defaultoptions() (rtd.util.mixins.options.options static method)": [[36, "rtd.util.mixins.Options.Options.defaultoptions"]], "getoptions() (rtd.util.mixins.options.options method)": [[36, "rtd.util.mixins.Options.Options.getoptions"]], "mergeoptions() (rtd.util.mixins.options.options method)": [[36, "rtd.util.mixins.Options.Options.mergeoptions"]], "bound (in module rtd.util.mixins.typings)": [[37, "rtd.util.mixins.Typings.Bound"]], "bounds (in module rtd.util.mixins.typings)": [[37, "rtd.util.mixins.Typings.Bounds"]], "boundsnp (in module rtd.util.mixins.typings)": [[37, "rtd.util.mixins.Typings.Boundsnp"]], "mat (in module rtd.util.mixins.typings)": [[37, "rtd.util.mixins.Typings.Mat"]], "matnp (in module rtd.util.mixins.typings)": [[37, "rtd.util.mixins.Typings.Matnp"]], "vec (in module rtd.util.mixins.typings)": [[37, "rtd.util.mixins.Typings.Vec"]], "vecnp (in module rtd.util.mixins.typings)": [[37, "rtd.util.mixins.Typings.Vecnp"]]}})